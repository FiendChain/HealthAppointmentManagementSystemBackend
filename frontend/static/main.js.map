{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/alerts/alerts.component.html","webpack:///./src/app/alerts/alerts.component.ts","webpack:///./src/app/alerts/alerts.service.ts","webpack:///./src/app/api/api-errorhandler.service.ts","webpack:///./src/app/api/api.config.ts","webpack:///./src/app/api/api.service.ts","webpack:///./src/app/api/auth.service.ts","webpack:///./src/app/app-browser/app-browser-panel.component.ts","webpack:///./src/app/app-browser/app-browser-toolbar/app-browser-toolbar.component.css","webpack:///./src/app/app-browser/app-browser-toolbar/app-browser-toolbar.component.html","webpack:///./src/app/app-browser/app-browser-toolbar/app-browser-toolbar.component.ts","webpack:///./src/app/app-browser/app-browser/app-browser.component.css","webpack:///./src/app/app-browser/app-browser/app-browser.component.html","webpack:///./src/app/app-browser/app-browser/app-browser.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/appointments/appointment-browser/appointment-browser.component.html","webpack:///./src/app/components/appointments/appointment-browser/appointment-browser.component.ts","webpack:///./src/app/components/appointments/appointment-form/appointment-form.component.html","webpack:///./src/app/components/appointments/appointment-form/appointment-form.component.ts","webpack:///./src/app/components/appointments/appointment-list/appointment-list.component.html","webpack:///./src/app/components/appointments/appointment-list/appointment-list.component.ts","webpack:///./src/app/components/forms/form.component.ts","webpack:///./src/app/components/forms/modal-body.component.ts","webpack:///./src/app/components/forms/modal-dialog.component.ts","webpack:///./src/app/components/forms/modal-forms.component.ts","webpack:///./src/app/components/forms/modal-forms.service.ts","webpack:///./src/app/components/health-centres/health-centre-browser/health-centre-browser.component.html","webpack:///./src/app/components/health-centres/health-centre-browser/health-centre-browser.component.ts","webpack:///./src/app/components/health-centres/health-centre-form/health-centre-form.component.html","webpack:///./src/app/components/health-centres/health-centre-form/health-centre-form.component.ts","webpack:///./src/app/components/health-centres/health-centre-list/health-centre-list.component.html","webpack:///./src/app/components/health-centres/health-centre-list/health-centre-list.component.ts","webpack:///./src/app/components/health-centres/health-centre-profile/health-centre-profile.component.html","webpack:///./src/app/components/health-centres/health-centre-profile/health-centre-profile.component.ts","webpack:///./src/app/components/login/login-form/login-form.component.css","webpack:///./src/app/components/login/login-form/login-form.component.html","webpack:///./src/app/components/login/login-form/login-form.component.ts","webpack:///./src/app/components/login/register-form-patient/register-form-patient.component.css","webpack:///./src/app/components/login/register-form-patient/register-form-patient.component.html","webpack:///./src/app/components/login/register-form-patient/register-form-patient.component.ts","webpack:///./src/app/components/login/register-form-provider/register-form-provider.component.css","webpack:///./src/app/components/login/register-form-provider/register-form-provider.component.html","webpack:///./src/app/components/login/register-form-provider/register-form-provider.component.ts","webpack:///./src/app/components/patients/patient-browser/patient-browser.component.html","webpack:///./src/app/components/patients/patient-browser/patient-browser.component.ts","webpack:///./src/app/components/patients/patient-form/patient-form.component.html","webpack:///./src/app/components/patients/patient-form/patient-form.component.ts","webpack:///./src/app/components/patients/patient-list/patient-list.component.html","webpack:///./src/app/components/patients/patient-list/patient-list.component.ts","webpack:///./src/app/components/patients/patient-profile/patient-profile.component.html","webpack:///./src/app/components/patients/patient-profile/patient-profile.component.ts","webpack:///./src/app/components/providers/provider-browser/provider-browser.component.html","webpack:///./src/app/components/providers/provider-browser/provider-browser.component.ts","webpack:///./src/app/components/providers/provider-form/provider-form.component.html","webpack:///./src/app/components/providers/provider-form/provider-form.component.ts","webpack:///./src/app/components/providers/provider-list/provider-list.component.html","webpack:///./src/app/components/providers/provider-list/provider-list.component.ts","webpack:///./src/app/components/providers/provider-profile/provider-profile.component.html","webpack:///./src/app/components/providers/provider-profile/provider-profile.component.ts","webpack:///./src/app/components/ratings/health-centre-rating-form/health-centre-rating-form.component.html","webpack:///./src/app/components/ratings/health-centre-rating-form/health-centre-rating-form.component.ts","webpack:///./src/app/components/ratings/health-centre-rating-list/health-centre-rating-list.component.html","webpack:///./src/app/components/ratings/health-centre-rating-list/health-centre-rating-list.component.ts","webpack:///./src/app/components/ratings/provider-rating-form/provider-rating-form.component.html","webpack:///./src/app/components/ratings/provider-rating-form/provider-rating-form.component.ts","webpack:///./src/app/components/ratings/provider-rating-list/provider-rating-list.component.html","webpack:///./src/app/components/ratings/provider-rating-list/provider-rating-list.component.ts","webpack:///./src/app/components/ratings/ratings-browser/ratings-browser.component.html","webpack:///./src/app/components/ratings/ratings-browser/ratings-browser.component.ts","webpack:///./src/app/models/provider.model.ts","webpack:///./src/app/router-animations/animation-metadata.ts","webpack:///./src/app/router-animations/animations.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"d-inline\\\" *ngFor=\\\"let alert of alerts; let i = index;\\\">\\r\\n    <ngb-alert [type]=\\\"alert.type\\\" [dismissible]=\\\"false\\\" (click)=\\\"close(alert, i)\\\" [ngClass]=\\\"{'alert-dismissed': alert.dismissed}\\\">{{ alert.text }}</ngb-alert>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { AlertService, Alert } from \"./alerts.service\";\r\n\r\n@Component({\r\n    selector: 'ngb-alerts',\r\n    templateUrl: './alerts.component.html',\r\n})\r\nexport class AlertsComponent {\r\n    constructor(\r\n        private alert: AlertService,\r\n    ) {}\r\n\r\n    get alerts() {\r\n        return this.alert.alerts;\r\n    }\r\n\r\n    close(alert: Alert, index: number) {\r\n        if (!alert.dismissed) {\r\n            this.alert.removeByIndex(index);\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\nexport interface Alert {\r\n    id?: number;\r\n    type: string;\r\n    text: string;\r\n    dismissed?: boolean;\r\n    autodismiss?: number;\r\n    autodismiss_timer?: number|any;\r\n}\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n    private current_id: number = 0;\r\n    private _alerts: Alert[] = [];\r\n\r\n    get alerts(): Alert[] {\r\n        return this._alerts;\r\n    }\r\n\r\n    private get new_id(): number {\r\n        this.current_id++;\r\n        return this.current_id;\r\n    }\r\n\r\n    clear(): void {\r\n        for (let alert of this.alerts) {\r\n            if (alert.autodismiss_timer) {\r\n                clearTimeout(alert.autodismiss_timer);\r\n            }\r\n        }\r\n        this._alerts = [];\r\n    }\r\n\r\n    addAlert(alert: Alert): void {\r\n        if (alert.autodismiss) {\r\n            alert.autodismiss_timer = setTimeout(() => {\r\n                this.removeByInstance(alert);\r\n            }, alert.autodismiss * 1000);\r\n        }\r\n        alert.id = this.new_id;\r\n        this.alerts.push(alert);\r\n    }\r\n\r\n    removeByIndex(index: number): void {\r\n        let alert = this._alerts[index];\r\n        if (alert.dismissed) return;\r\n        if (alert.autodismiss_timer) {\r\n            clearTimeout(alert.autodismiss_timer);\r\n        }\r\n        alert.dismissed = true;\r\n        setTimeout(() => {\r\n            this.removeById(alert.id);\r\n        }, 250);\r\n    }\r\n\r\n    removeByInstance(alert: Alert): void {\r\n        let index = this._alerts.indexOf(alert);\r\n        if (index != -1) {\r\n            this.removeByIndex(index);\r\n        }\r\n    }\r\n\r\n    private removeById(id: number): void {\r\n        let index: number = 0;\r\n        for (let alert of this.alerts) {\r\n            if (alert.id == id) {\r\n                this._alerts.splice(index, 1);\r\n                return;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport { Router } from \"@angular/router\";\r\nimport { AlertService } from \"../alerts/alerts.service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class ApiErrorHandler implements HttpInterceptor {\r\n    constructor(\r\n        private router: Router,\r\n        private alert: AlertService,\r\n        private auth: AuthService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next\r\n            .handle(request)\r\n            .do((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    \r\n                }\r\n            }, (err: any) => {\r\n                if (err instanceof HttpErrorResponse) {\r\n                    switch (err.status) {\r\n                    case 400:\r\n                        this.alert.addAlert({\r\n                            type: 'danger',\r\n                            text: err.error,\r\n                            autodismiss: 5,\r\n                        });\r\n                        break;\r\n                    case 401:\r\n                        this.auth.check_auto_login();\r\n                        break;\r\n                    case 403:\r\n                    case 404:\r\n                        this.router.navigateByUrl(this.auth.default_route);\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n};","// export const API_URL: string = 'http://180.150.67.104:5000';\r\nexport const API_URL: string = 'http://127.0.0.1:5000';\r\n\r\nexport const OPTIONS = {\r\n    headers: { \r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    withCredentials: true,\r\n    mode: 'cors'\r\n};\r\n\r\nexport function JSONToUrlEncoded(object): any {\r\n    let data: URLSearchParams = new URLSearchParams();\r\n    for (let key in object) {\r\n        data.set(key, object[key]);\r\n    }\r\n    return data.toString();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\n\r\nimport { API_URL, JSONToUrlEncoded, OPTIONS } from './api.config';\r\n\r\nimport { Patient } from '../models/patient.model';\r\nimport { Provider } from '../models/provider.model';\r\nimport { HealthCentre } from '../models/health_centre.model';\r\nimport { Appointment } from '../models/appointment.model';\r\nimport { HealthCentreRating } from '../models/health_centre_rating.model';\r\nimport { ProviderRating } from '../models/provider_rating.model';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) { }\r\n\r\n    // patients\r\n    getPatients(): Observable<Patient[]> {\r\n        return this.http\r\n            .get<Patient[]>(`${API_URL}/patients`, OPTIONS);\r\n    }\r\n\r\n    addPatient(patient: Patient): Observable<Patient> {\r\n        return this.http\r\n            .post<Patient>(`${API_URL}/patients`, JSONToUrlEncoded(patient), OPTIONS)\r\n    }\r\n\r\n    getPatient(id: number|string): Observable<Patient> {\r\n        return this.http\r\n            .get<Patient>(`${API_URL}/patients/${id}`, OPTIONS);\r\n    }\r\n\r\n    deletePatient(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/patients/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchPatient(id: number|string, data: any): Observable<Patient> {\r\n        return this.http\r\n            .patch<Patient>(`${API_URL}/patients/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n\r\n    // providers\r\n    getProviders(): Observable<Provider[]> {\r\n        return this.http\r\n            .get<Provider[]>(`${API_URL}/providers`, OPTIONS);\r\n    }\r\n\r\n    addProvider(provider: Provider): Observable<Provider> {\r\n        return this.http\r\n            .post<Provider>(`${API_URL}/providers`, JSONToUrlEncoded(provider), OPTIONS);\r\n    }\r\n\r\n    getProvider(id: number|string): Observable<Provider> {\r\n        return this.http\r\n            .get<Provider>(`${API_URL}/providers/${id}`, OPTIONS);\r\n    }\r\n\r\n    deleteProvider(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/providers/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchProvider(id: number|string, data: any): Observable<Provider> {\r\n        return this.http\r\n            .patch<Provider>(`${API_URL}/providers/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n\r\n    // health centres\r\n    getHealthCentres(): Observable<HealthCentre[]> {\r\n        return this.http\r\n            .get<HealthCentre[]>(`${API_URL}/health_centres`, OPTIONS);\r\n    }\r\n\r\n    addHealthCentre(health_centre: HealthCentre): Observable<HealthCentre> {\r\n        return this.http\r\n            .post<HealthCentre>(`${API_URL}/health_centres`, JSONToUrlEncoded(health_centre), OPTIONS);\r\n    }\r\n\r\n    getHealthCentre(id: number|string): Observable<HealthCentre> {\r\n        return this.http\r\n            .get<HealthCentre>(`${API_URL}/health_centres/${id}`, OPTIONS);\r\n    }\r\n\r\n    deleteHealthCentre(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/health_centres/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchHealthCentre(id: number|string, data: any): Observable<HealthCentre> {\r\n        return this.http\r\n            .patch<HealthCentre>(`${API_URL}/health_centres/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n\r\n    // appointments\r\n    getAppointments(): Observable<Appointment[]> {\r\n        return this.http\r\n            .get<Appointment[]>(`${API_URL}/appointments`, OPTIONS);\r\n    }\r\n\r\n    addAppointment(appointment: Appointment): Observable<Appointment> {\r\n        return this.http\r\n            .post<Appointment>(`${API_URL}/appointments`, JSONToUrlEncoded(appointment), OPTIONS);\r\n    }\r\n\r\n    getAppointment(id: number|string): Observable<Appointment> {\r\n        return this.http\r\n            .get<Appointment>(`${API_URL}/appointments/${id}`, OPTIONS);\r\n    }\r\n\r\n    deleteAppointment(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/appointments/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchAppointment(id: number|string, data: any): Observable<Appointment> {\r\n        return this.http\r\n            .patch<Appointment>(`${API_URL}/appointments/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n\r\n    // health centre ratings\r\n    getHealthCentreRatings(): Observable<HealthCentreRating[]> {\r\n        return this.http\r\n            .get<HealthCentreRating[]>(`${API_URL}/health_centre_ratings`, OPTIONS);\r\n    }\r\n\r\n    addHealthCentreRating(health_centre_rating: HealthCentreRating): Observable<HealthCentreRating> {\r\n        return this.http\r\n            .post<HealthCentreRating>(`${API_URL}/health_centre_ratings`, JSONToUrlEncoded(health_centre_rating), OPTIONS);\r\n    }\r\n\r\n    getHealthCentreRating(id: number|string): Observable<HealthCentreRating> {\r\n        return this.http\r\n            .get<HealthCentreRating>(`${API_URL}/health_centre_ratings/${id}`, OPTIONS);\r\n    }\r\n\r\n    deleteHealthCentreRating(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/health_centre_ratings/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchHealthCentreRating(id: number|string, data: any): Observable<HealthCentreRating> {\r\n        return this.http\r\n            .patch<HealthCentreRating>(`${API_URL}/health_centre_ratings/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n\r\n    // provider ratings\r\n    getProviderRatings(): Observable<ProviderRating[]> {\r\n        return this.http\r\n            .get<ProviderRating[]>(`${API_URL}/provider_ratings`, OPTIONS);\r\n    }\r\n\r\n    addProviderRating(provider_rating: ProviderRating): Observable<ProviderRating> {\r\n        return this.http\r\n            .post<ProviderRating>(`${API_URL}/provider_ratings`, JSONToUrlEncoded(provider_rating), OPTIONS);\r\n    }\r\n\r\n    getProviderRating(id: number|string): Observable<ProviderRating> {\r\n        return this.http\r\n            .get<ProviderRating>(`${API_URL}/provider_ratings/${id}`, OPTIONS);\r\n    }\r\n\r\n    deleteProviderRating(id: number|string): Observable<any> {\r\n        return this.http\r\n            .delete<any>(`${API_URL}/provider_ratings/${id}`, OPTIONS);\r\n    }\r\n\r\n    patchProviderRating(id: number|string, data: any): Observable<ProviderRating> {\r\n        return this.http\r\n            .patch<ProviderRating>(`${API_URL}/provider_ratings/${id}`, JSONToUrlEncoded(data), OPTIONS);\r\n    }\r\n}\r\n","import { Injectable, OnInit } from \"@angular/core\";\r\nimport { HttpClient, HttpEvent } from \"@angular/common/http\";\r\n\r\nimport { API_URL, JSONToUrlEncoded, OPTIONS } from \"./api.config\";\r\nimport { Login } from '../models/login.model';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { User } from \"../models/user.model\";\r\nimport { CookieService } from \"angular2-cookie\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private _current_user: User;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private cookies: CookieService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    get current_user(): User {\r\n        return this._current_user;\r\n    }\r\n\r\n    get default_route(): string {\r\n\t\tif (!this.current_user) {\r\n\t\t\treturn '/login';\r\n\t\t}\r\n\t\tswitch (this.current_user.type) {\r\n\t\tcase 'admin':\r\n\t\t\treturn '/patients';\r\n\t\tcase 'patient':\r\n\t\tcase 'provider':\r\n\t\t\treturn '/appointments';\r\n\t\tdefault:\r\n\t\t\treturn '/login';\r\n\t\t}\r\n\t}\r\n\r\n    attempt_login() {\r\n        this.check_login()\r\n            .then(() => {\r\n                if (this.router.url == '/')\r\n                    this.router.navigateByUrl(this.default_route);\r\n            }, () => {\r\n                this.check_auto_login();\r\n            });\r\n    }\r\n\r\n    check_auto_login() {\r\n        // attempt auto login with stored credentials\r\n        if (JSON.parse(this.cookies.get('auto_login'))) {\r\n            // auto login worked\r\n            this.auto_login().then((user: User) => {\r\n                if (this.router.url == '/') this.router.navigateByUrl(this.default_route);\r\n            // auto login failed\r\n            }, () => {\r\n                this.router.navigateByUrl('/login');\r\n            });\r\n        } else {\r\n            // if not logged in, and no auto login\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n\r\n    check_login(): Promise<User> {\r\n        let request: Observable<any> = this.http\r\n            .get<User>(`${API_URL}/login`, OPTIONS)\r\n            .catch((err: any) => {\r\n                this._current_user = undefined;\r\n                throw err;\r\n            });\r\n        return new Promise<User>((resolve, reject) => {\r\n            request.subscribe((user: User) => {\r\n                this._current_user = user;\r\n                resolve(user);\r\n            }, (err) => {\r\n                reject(err);\r\n            });\r\n        }); \r\n    }\r\n\r\n    auto_login(): Promise<User> {\r\n        return this.login({\r\n            email: this.cookies.get('email'),\r\n            password: this.cookies.get('password'),\r\n        });\r\n    }\r\n\r\n    login(credentials: Login): Promise<User> {\r\n        let request: Observable<any> = this.http\r\n            .post<Login>(`${API_URL}/login`, JSONToUrlEncoded(credentials), OPTIONS)\r\n            .catch((err: any) => {\r\n                this._current_user = undefined;\r\n                return err;\r\n            });\r\n        \r\n        return new Promise<User>((resolve, reject) => {\r\n            request.subscribe((user: User) => {\r\n                this._current_user = user;\r\n                resolve(user);\r\n            }, (err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    logout(): Promise<any> {\r\n        let request = this.http\r\n            .get<any>(`${API_URL}/logout`, OPTIONS)\r\n            .catch((err: any) => {\r\n                return Observable.of(undefined);\r\n            });\r\n        return new Promise<any>((resolve, reject) => {\r\n            request.subscribe((response) => {\r\n                this._current_user = undefined;\r\n                resolve(response);\r\n            }, (err) => {\r\n                reject(err);\r\n            })\r\n        });\r\n    }\r\n}","import { AuthService } from \"../api/auth.service\";\nimport { User } from \"../models/user.model\";\n\nexport abstract class AppBrowserPanel {\n    constructor(\n        private _auth: AuthService,\n    ) {}\n\n    get auth(): AuthService {\n        return this._auth;\n    }\n\n    get current_user(): User {\n        return this.auth.current_user;\n    }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\r\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <ng-content></ng-content>\\r\\n        </ul>\\r\\n    </nav>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-browser-toolbar',\r\n    templateUrl: './app-browser-toolbar.component.html',\r\n    styleUrls: ['./app-browser-toolbar.component.css'],\r\n})\r\nexport class AppBrowserToolbar {}","module.exports = \"\"","module.exports = \"<ng-container *ngIf=\\\"current_user\\\">\\r\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark\\\" [ngClass]=\\\"navbar_background\\\">\\r\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"{{default_route}}\\\">Dashboard</a>\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <ng-container [ngSwitch]=\\\"current_user.type\\\">\\r\\n                <ng-container *ngSwitchCase=\\\"'patient'\\\">\\r\\n                    <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/patients/{{current_user.id}}\\\">Show profile</a></li>\\r\\n                </ng-container>\\r\\n                <ng-container *ngSwitchCase=\\\"'provider'\\\">\\r\\n                    <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/providers/{{current_user.id}}\\\">Show profile</a></li>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" (click)=\\\"logout()\\\">Logout ({{current_user?.name}})</a></li>\\r\\n        </ul>\\r\\n        <div class=\\\"form-inline\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search\\\">\\r\\n            <button class=\\\"btn btn-light my-2 my-sm-0\\\">Search</button>\\r\\n        </div>\\r\\n    </nav>\\r\\n    <!--Left nav bar-->\\r\\n    <nav class=\\\"nav nav-tabs nav-stacked bg-light sidebar\\\">\\r\\n        <ng-container *ngIf=\\\"current_user?.is_admin\\\">\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/patients\\\" routerLinkActive=\\\"active\\\">Patients</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/appointments\\\" routerLinkActive=\\\"active\\\">Appointments</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/providers\\\" routerLinkActive=\\\"active\\\">Providers</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/health_centres\\\" routerLinkActive=\\\"active\\\">Health Centres</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/ratings\\\" routerLinkActive=\\\"active\\\">Ratings</a>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"current_user?.is_patient\\\">\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/appointments\\\" routerLinkActive=\\\"active\\\">Appointments</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/providers\\\" routerLinkActive=\\\"active\\\">Providers</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/health_centres\\\" routerLinkActive=\\\"active\\\">Health Centres</a>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"current_user?.is_provider\\\">\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/appointments\\\" routerLinkActive=\\\"active\\\">Appointments</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/patients\\\" routerLinkActive=\\\"active\\\">Patients</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/providers\\\" routerLinkActive=\\\"active\\\">Providers</a>\\r\\n            <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/health_centres\\\" routerLinkActive=\\\"active\\\">Health Centres</a>\\r\\n        </ng-container>\\r\\n    </nav>\\r\\n    <!--Content-->\\r\\n    <div class=\\\"browser-content\\\">\\r\\n        <div class=\\\"alert-container\\\">\\r\\n            <ngb-alerts></ngb-alerts>\\r\\n        </div>\\r\\n        <div [@fadeAnimation]=\\\"getAnimationName(browser_outlet)\\\">\\r\\n            <router-outlet #browser_outlet=\\\"outlet\\\"></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RouterOutlet, Router } from '@angular/router';\r\nimport { fadeAnimation, slideAnimation } from '../../router-animations/animations';\r\nimport { AuthService } from '../../api/auth.service';\r\nimport { AppBrowserPanel } from '../app-browser-panel.component';\r\nimport { AlertService } from '../../alerts/alerts.service';\r\n\r\n@Component({\r\n  selector: 'app-browser',\r\n  templateUrl: './app-browser.component.html',\r\n  styleUrls: ['./app-browser.component.css'],\r\n  animations: [fadeAnimation, slideAnimation],\r\n})\r\nexport class AppBrowserComponent extends AppBrowserPanel implements OnInit {\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate alert: AlertService,\r\n\t\tauth: AuthService,\r\n\t) { \r\n\t\tsuper(auth);\r\n\t}\r\n\r\n\tget default_route(): string {\r\n\t\treturn this.auth.default_route;\r\n\t}\r\n\r\n\tget navbar_background(): string {\r\n\t\tif (!this.current_user) {\r\n\t\t\treturn 'bg-blue-gradient';\r\n\t\t}\r\n\t\tswitch (this.current_user.type) {\r\n\t\tcase 'admin':\r\n\t\t\treturn 'bg-red-gradient';\r\n\t\tcase 'patient':\r\n\t\t\treturn 'bg-blue-gradient';\r\n\t\tcase 'provider':\r\n\t\t\treturn 'bg-green-gradient';\r\n\t\tdefault:\r\n\t\t\treturn 'bg-blue-gradient';\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.auth.attempt_login();\r\n\t}\r\n\r\n\tgetAnimationName(outlet: RouterOutlet): any {\r\n\t\treturn outlet.isActivated ? outlet.activatedRouteData.state : '';\r\n\t}\r\n\r\n\tshow_profile(): void {\r\n\t\tthis.alert.addAlert({\r\n\t\t\ttype: 'success',\r\n\t\t\ttext: 'Testing',\r\n\t\t});\r\n\t}\r\n\r\n\tlogout(): void {\r\n\t\tthis.auth.logout().then(() => {\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t});\r\n\t}\r\n\r\n\r\n}\r\n","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginForm } from './components/login/login-form/login-form.component';\r\nimport { PatientProfile } from './components/patients/patient-profile/patient-profile.component';\r\nimport { ProviderProfile } from './components/providers/provider-profile/provider-profile.component';\r\nimport { HealthCentreProfile } from './components/health-centres/health-centre-profile/health-centre-profile.component';\r\nimport { AppBrowserComponent } from './app-browser/app-browser/app-browser.component';\r\nimport { RegisterFormPatient } from './components/login/register-form-patient/register-form-patient.component';\r\nimport { RegisterFormProvider } from './components/login/register-form-provider/register-form-provider.component';\r\nimport { AppointmentBrowser } from './components/appointments/appointment-browser/appointment-browser.component';\r\nimport { HealthCentreBrowser } from './components/health-centres/health-centre-browser/health-centre-browser.component';\r\nimport { PatientBrowser } from './components/patients/patient-browser/patient-browser.component';\r\nimport { ProviderBrowser } from './components/providers/provider-browser/provider-browser.component';\r\nimport { RatingsBrowser } from './components/ratings/ratings-browser/ratings-browser.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginForm, data: {state: 'login'} },\r\n    { path: 'register', redirectTo: '/register_patient', pathMatch: 'full' },\r\n    { path: 'register_patient', component: RegisterFormPatient, data: {state: 'register_patient'} },\r\n    { path: 'register_provider', component: RegisterFormProvider, data: {state: 'register_provider'} },\r\n    { path: '', component: AppBrowserComponent, data: {state: 'dashboard'}, children: [\r\n        { path: 'appointments', component: AppointmentBrowser, data: {state: 'appointment_browser'} },\r\n        { path: 'patients', component: PatientBrowser, data: {state: 'patient_browser'} },\r\n        { path: 'patients/:id', component: PatientProfile, data: {state: 'patient_profile'} },\r\n        { path: 'providers', component: ProviderBrowser, data: {state: 'provider_browser'} },\r\n        { path: 'providers/:id', component: ProviderProfile, data: {state: 'provider_profile'} },\r\n        { path: 'health_centres', component: HealthCentreBrowser, data: {state: 'health_centre_browser'} },\r\n        { path: 'health_centres/:id', component: HealthCentreProfile, data: {state: 'health_centre_profile'} },\r\n        { path: 'ratings', component: RatingsBrowser, data: {state: 'ratings_browser'}, },\r\n    ]},\r\n];\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forRoot(routes) ],\r\n    exports: [ RouterModule ],\r\n})\r\nexport class RoutingModule {}","module.exports = \":host(body) {\\r\\n    background: #9CECFB;\\r\\n    /* fallback for old browsers */\\r\\n    /* Chrome 10-25, Safari 5.1-6 */\\r\\n    background: linear-gradient(to right, #0052D4, #65C7F7, #9CECFB);\\r\\n    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\r\\n}\"","module.exports = \"<div [@slideAnimation]=\\\"getAnimationName(outlet)\\\">\\n\\t<router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\t\\n</div>\\n\\n\\n\\n\\t\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api/api.service';\nimport { RouterOutlet, Router, ActivatedRoute } from '@angular/router';\nimport { fadeAnimation, slideAnimation } from './router-animations/animations';\nimport { AuthService } from './api/auth.service';\nimport { CookieService } from 'angular2-cookie';\nimport { User } from './models/user.model';\nimport { AppBrowserPanel } from './app-browser/app-browser-panel.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [fadeAnimation, slideAnimation],\n})\nexport class AppComponent extends AppBrowserPanel implements OnInit {\n  \ttitle = 'Health Appointment Management System';\n\n  \tconstructor(\n\t\tprivate api: ApiService,\n\t\tprivate router: Router,\n\t\tprivate cookies: CookieService,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tauth: AuthService,\n\t) { \n\t\tsuper(auth);\n  \t}\n\n  \tngOnInit(): void {\n\t\t// check if cookies exist first and set if not\n\t\tthis.load_default_cookies();\n\t\t// check if logged in already\n\t\tthis.auth.attempt_login();\n  \t}\n\n  \tprivate load_default_cookies(): void {\n   \t\tthis.load_default_cookie('remember_me', String(false));\n    \tthis.load_default_cookie('auto_login', String(false));\n  \t}\n\n  \tprivate load_default_cookie(key: string, value: string): void {\n    \tlet current_value = this.cookies.get(key);\n    \tif (!current_value) {\n      \t\tthis.cookies.put(key, value);\n    \t}\n  \t}\n\n  \tgetAnimationName(outlet: RouterOutlet): any {\n    \treturn outlet.isActivated ? outlet.activatedRouteData.state : '';\n  \t}\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\n// services\nimport { ApiErrorHandler } from './api/api-errorhandler.service';\nimport { ApiService } from './api/api.service';\nimport { AuthService } from './api/auth.service';\nimport { CookieService } from 'angular2-cookie/core';\nimport { ModalFormService } from './components/forms/modal-forms.service';\nimport { AlertService } from './alerts/alerts.service';\n// modules\nimport { DataTablesModule } from 'angular-datatables';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// components\nimport { AlertsComponent } from './alerts/alerts.component';\nimport { AppBrowserComponent } from './app-browser/app-browser/app-browser.component';\nimport { AppComponent } from './app.component';\nimport { AppointmentBrowser } from './components/appointments/appointment-browser/appointment-browser.component';\nimport { AppointmentForm } from './components/appointments/appointment-form/appointment-form.component';\nimport { AppointmentList } from './components/appointments/appointment-list/appointment-list.component';\nimport { HealthCentreBrowser } from './components/health-centres/health-centre-browser/health-centre-browser.component';\nimport { HealthCentreForm } from './components/health-centres/health-centre-form/health-centre-form.component';\nimport { HealthCentreList } from './components/health-centres/health-centre-list/health-centre-list.component';\nimport { HealthCentreProfile } from './components/health-centres/health-centre-profile/health-centre-profile.component';\nimport { HealthCentreRatingList } from './components/ratings/health-centre-rating-list/health-centre-rating-list.component';\nimport { LoginForm } from './components/login/login-form/login-form.component';\nimport { ModalConfirm } from './components/forms/modal-dialog.component';\nimport { ModalPatientForm, ModalProviderForm, ModalHealthCentreForm, ModalAppointmentForm, ModalHealthCentreRatingForm, ModalProviderRatingForm } from './components/forms/modal-forms.component';\nimport { PatientBrowser } from './components/patients/patient-browser/patient-browser.component';\nimport { PatientForm } from './components/patients/patient-form/patient-form.component';\nimport { PatientList } from './components/patients/patient-list/patient-list.component';\nimport { PatientProfile } from './components/patients/patient-profile/patient-profile.component';\nimport { ProviderBrowser } from './components/providers/provider-browser/provider-browser.component';\nimport { ProviderForm } from './components/providers/provider-form/provider-form.component';\nimport { ProviderList } from './components/providers/provider-list/provider-list.component';\nimport { ProviderProfile } from './components/providers/provider-profile/provider-profile.component';\nimport { ProviderRatingList } from './components/ratings/provider-rating-list/provider-rating-list.component';\nimport { RatingsBrowser } from './components/ratings/ratings-browser/ratings-browser.component';\nimport { RegisterFormPatient } from './components/login/register-form-patient/register-form-patient.component';\nimport { RegisterFormProvider } from './components/login/register-form-provider/register-form-provider.component';\nimport { ModalBody } from './components/forms/modal-body.component';\nimport { HealthCentreRatingForm } from './components/ratings/health-centre-rating-form/health-centre-rating-form.component';\nimport { ProviderRatingForm } from './components/ratings/provider-rating-form/provider-rating-form.component';\nimport { CommonModule } from '@angular/common';\nimport { AppBrowserToolbar } from './app-browser/app-browser-toolbar/app-browser-toolbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // browser\n    AppBrowserComponent,\n    AppBrowserToolbar,\n    // health centre\n    HealthCentreBrowser,\n    HealthCentreForm,\n    HealthCentreList,\n    HealthCentreProfile,\n    // patient\n    PatientBrowser,\n    PatientForm,\n    PatientList,\n    PatientProfile,\n    // provider\n    ProviderBrowser,\n    ProviderForm,\n    ProviderList,\n    ProviderProfile,\n    // appointment\n    AppointmentBrowser,\n    AppointmentForm,\n    AppointmentList,\n    // ratings\n    HealthCentreRatingForm,\n    HealthCentreRatingList,\n    ProviderRatingForm,\n    ProviderRatingList,\n    RatingsBrowser,\n    // login\n    LoginForm,\n    RegisterFormPatient,\n    RegisterFormProvider,\n    // modals\n    ModalAppointmentForm,\n    ModalBody,\n    ModalConfirm,\n    ModalHealthCentreForm,\n    ModalHealthCentreRatingForm,\n    ModalPatientForm,\n    ModalProviderForm,\n    ModalProviderRatingForm,\n    // alerts\n    AlertsComponent,\n  ],\n  entryComponents: [\n    // modals\n    ModalAppointmentForm,\n    ModalConfirm,\n    ModalHealthCentreForm,\n    ModalHealthCentreRatingForm,\n    ModalPatientForm,\n    ModalProviderForm,\n    ModalProviderRatingForm,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CommonModule,\n    DataTablesModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n    RoutingModule,\n  ],\n  providers: [\n    AlertService,\n    ApiService,\n    AuthService,\n    CookieService,\n    ModalFormService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiErrorHandler,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<app-browser-toolbar *ngIf=\\\"current_user?.is_admin\\\">\\r\\n    <li class=\\\"nav-item active flex\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">library_add</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"add_appointment()\\\">Add appointment</a>\\r\\n    </li>\\r\\n</app-browser-toolbar>\\r\\n<div class=\\\"card\\\" *ngIf=\\\"appointments\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Appointments</h2>\\r\\n        <appointment-list [appointments]=\\\"appointments\\\" [show-providers]=\\\"show_providers\\\" [show-patients]=\\\"show_patients\\\"></appointment-list>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \\r\\n    \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Appointment } from \"../../../models/appointment.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'appointment-browser',\r\n    templateUrl: './appointment-browser.component.html',\r\n})\r\nexport class AppointmentBrowser extends AppBrowserPanel implements OnInit {\r\n    private _appointments: Appointment[];\r\n    private appointments$: Observable<Appointment[]>;\r\n\r\n    private appointment_form_cache: Appointment|any = {};\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    get appointments(): Appointment[] {\r\n        return this._appointments;\r\n    }\r\n\r\n    get show_patients(): boolean {\r\n        return (this.current_user \r\n            && (this.current_user.is_admin || this.current_user.is_provider)\r\n        );\r\n    }\r\n\r\n    get show_providers(): boolean {\r\n        return (this.current_user\r\n            && (this.current_user.is_admin || this.current_user.is_patient)  \r\n        );\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appointments$ = this.api.getAppointments();\r\n        if (!this.appointments) {\r\n            this.appointments$.subscribe((appointments: Appointment[]) => {\r\n                this._appointments = appointments;\r\n            });\r\n        }\r\n    }\r\n\r\n    add_appointment(): void {\r\n        this.modal\r\n            .open_appointment_form('Add appointment', this.appointment_form_cache)\r\n            .then((form) => {\r\n                this.appointment_form_cache = form.onSubmit;\r\n                this.api.addAppointment(form.onSubmit)\r\n                    .subscribe((appointment) => {\r\n                        this.appointment_form_cache = {};\r\n                        this._appointments.push(appointment);\r\n                    });\r\n            });\r\n    }\r\n\r\n\r\n}","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_patients\\\">\\r\\n        <label>Patients</label>\\r\\n        <select formControlName=\\\"patient_id\\\" class=\\\"form-control\\\" placeholder=\\\"Patient\\\" value=\\\"value?.patient_name?\\\" required>\\r\\n            <option *ngFor=\\\"let patient of patients\\\" [value]=\\\"patient.id\\\">{{patient.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_providers\\\">\\r\\n        <label>Providers</label>\\r\\n        <select formControlName=\\\"provider_id\\\" class=\\\"form-control\\\" placeholder=\\\"Provider\\\" value=\\\"value?.provider_name?\\\" required>\\r\\n            <option *ngFor=\\\"let provider of providers\\\" [value]=\\\"provider.id\\\">{{provider.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"start_time\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Start time\\\" id=\\\"inputStartTime\\\" required autofocus>\\r\\n        <label for=\\\"inputStartTime\\\">Start time</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"end_time\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"End time\\\" id=\\\"inputEndTime\\\" required>\\r\\n        <label for=\\\"inputEndTime\\\">End time</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"reason\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Reason\\\" id=\\\"inputReason\\\">\\r\\n        <label for=\\\"inputReason\\\">Reason</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"comment\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Comment\\\" id=\\\"inputComment\\\">\\r\\n        <label for=\\\"inputComment\\\">Comment</label>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">{{button_text}}</button>\\r\\n</form>\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\nimport { Appointment } from \"../../../models/appointment.model\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\n\r\n@Component({\r\n    selector: 'appointment-form',\r\n    templateUrl: './appointment-form.component.html',\r\n})\r\nexport class AppointmentForm extends FormComponent implements OnInit {\r\n    @Input('button-text') button_text: string = \"Submit\";\r\n    @Input('show-patients') show_patients: boolean = true;\r\n    @Input('show-providers') show_providers: boolean = true;\r\n\r\n    public value: Appointment|any = {};\r\n    private providers$: Observable<Provider[]>;\r\n    private _providers: Provider[];\r\n    private patients$: Observable<Patient[]>;\r\n    private _patients: Patient[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get providers(): Provider[] {\r\n        return this._providers;\r\n    }\r\n\r\n    get patients(): Patient[] {\r\n        return this._patients;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            'patient_id': new FormControl(this.value.patient_id, Validators.required),\r\n            'provider_id': new FormControl(this.value.provider_id, Validators.required),\r\n            'start_time': new FormControl(this.value.start_time, Validators.required),\r\n            'end_time': new FormControl(this.value.end_time, Validators.required),\r\n            'reason': new FormControl(this.value.reason || \"\", Validators.required),\r\n            'comment': new FormControl(this.value.comment || \"\"),\r\n        });\r\n        this.providers$ = this.api.getProviders();\r\n        this.patients$ = this.api.getPatients();\r\n        if (this.show_patients) {\r\n            this.patients$.subscribe((patients) => {\r\n                this._patients = patients;\r\n                let patient_id = this.form.get('patient_id');\r\n                if (!patient_id.value) {\r\n                    patient_id.setValue(patients[0].id);\r\n                }\r\n            });\r\n        }\r\n        if (this.show_providers) {\r\n            this.providers$.subscribe((providers) => {\r\n                this._providers = providers;\r\n                let provider_id = this.form.get('provider_id');\r\n                if (!provider_id.value) {\r\n                    provider_id.setValue(providers[0].id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","module.exports = \"<table datatable class=\\\"table row-border\\\" *ngIf=\\\"appointments\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th *ngIf=\\\"show_patients\\\">Patient name</th>\\r\\n            <th *ngIf=\\\"show_providers\\\">Provider name</th>\\r\\n            <th>Start time</th>\\r\\n            <th>End time</th>\\r\\n            <th>Reason</th>\\r\\n            <th>Comment</th>\\r\\n            <th *ngIf=\\\"current_user\\\">Actions</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let appointment of appointments; let i = index;\\\">\\r\\n            <td *ngIf=\\\"show_patients\\\"><a routerLink=\\\"/patients/{{appointment.patient_id}}\\\">{{appointment.patient_name}}</a></td>\\r\\n            <td *ngIf=\\\"show_providers\\\"><a routerLink=\\\"/providers/{{appointment.provider_id}}\\\">{{appointment.provider_name}}</a></td>\\r\\n            <td>{{appointment.start_time}}</td>\\r\\n            <td>{{appointment.end_time}}</td>\\r\\n            <td>{{appointment.reason}}</td>\\r\\n            <td>{{appointment.comment}}</td>\\r\\n            <td *ngIf=\\\"current_user\\\">\\r\\n                <a (click)=\\\"modify(appointment, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n                <a (click)=\\\"delete(appointment, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Appointment } from \"../../../models/appointment.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'appointment-list',\r\n    templateUrl: './appointment-list.component.html',\r\n})\r\nexport class AppointmentList extends AppBrowserPanel implements OnInit {\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    @Input('show-providers') show_providers: boolean = true;\r\n    @Input('show-patients') show_patients: boolean = true;\r\n    @Input('appointments') appointments: Appointment[];\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    modify(appointment: Appointment, index: number) {\r\n        this.modal\r\n            .open_appointment_form('Modify appointment', appointment, this.show_providers, this.show_patients)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchAppointment(appointment.id, form.onSubmitChange)\r\n                        .subscribe((patched_appointment) => {\r\n                            this.appointments[index] = patched_appointment;\r\n                        })\r\n                }\r\n            });\r\n    } \r\n\r\n    get delete_message(): DeleteParams {\r\n        switch (this.current_user.type) {\r\n        case 'patient':\r\n            return {\r\n                title: \"Cancel appointment\",\r\n                message: \"Are you sure you want to cancel this appointment?\",\r\n            };\r\n        case 'provider':\r\n            return {\r\n                title: \"Cancel appointment\",\r\n                message: \"Are you sure you want to cancel this patient's appointment?\",\r\n            }\r\n        case 'admin':\r\n        default:\r\n            return {\r\n                title: \"Delete appointment\",\r\n                message: \"Are you sure you want to delete this appointment?\",\r\n            };\r\n        }\r\n    }\r\n\r\n    delete(appointment: Appointment, index: number) {\r\n        let delete_message = this.delete_message;\r\n        this.modal\r\n            .dialog(delete_message.title, delete_message.message)\r\n            .then(() => {\r\n                this.api.deleteAppointment(appointment.id)\r\n                    .subscribe(() => {\r\n                        this.appointments.splice(index, 1);\r\n                    });\r\n            })\r\n    }\r\n}\r\n\r\ninterface DeleteParams {\r\n    title: string;\r\n    message: string;\r\n}","import { Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nexport abstract class FormComponent {\r\n    @Input('value')\r\n    public value: any = {};\r\n\r\n    @Output('onSubmit')\r\n    public on_submit = new EventEmitter<any>();\r\n\r\n    @Output('onSubmitChange')\r\n    public on_submit_change = new EventEmitter<any>();\r\n\r\n    @Output('all')\r\n    public all = new EventEmitter<any>();\r\n\r\n    public form: FormGroup;\r\n\r\n    constructor() {}\r\n\r\n    submit(): void {\r\n        this.on_submit.emit(this.form.value);\r\n        let changes: any = undefined;\r\n        if (this.form.dirty) {\r\n            changes = {};\r\n            for (let key in this.form.value) {\r\n                let value = this.form.get(key);\r\n                if (value.dirty) {\r\n                    changes[key] = value.value;\r\n                }\r\n            }\r\n            this.on_submit_change.emit(changes);\r\n        }\r\n        this.all.emit({\r\n            onSubmit: this.form.value,\r\n            onSubmitChange: changes,\r\n        });\r\n    }\r\n}","import { Component, Input, EventEmitter, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'modal-body',\r\n    template: `\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">{{title}}</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"container\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n    `,\r\n})\r\nexport class ModalBody {\r\n    @Input('title') title: string;\r\n    @Output('onClick') onClick = new EventEmitter<any>();\r\n\r\n    dismiss(): void {\r\n        this.onClick.emit();\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n    selector: 'modal-confirm',\r\n    template: `\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">{{title}}</h4>\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>{{text}}</p>\r\n        </div>\r\n        <div class=\"modal-footer\"><button class=\"btn btn-danger btn-round\" (click)=\"activeModal.close()\">Confirm</button></div>\r\n    `,\r\n})\r\nexport class ModalConfirm {\r\n    public title: string;\r\n    public text: string;\r\n\r\n    constructor(\r\n        public activeModal: NgbActiveModal,\r\n    ) {}\r\n}","import { Component, EventEmitter } from \"@angular/core\";\r\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HealthCentre } from \"../../models/health_centre.model\";\r\nimport { Patient } from \"../../models/patient.model\";\r\nimport { Provider } from \"../../models/provider.model\";\r\nimport { Appointment } from \"../../models/appointment.model\";\r\nimport { HealthCentreRating } from \"../../models/health_centre_rating.model\";\r\nimport { ProviderRating } from \"../../models/provider_rating.model\";\r\n\r\nabstract class ModalForm {\r\n    public value: any = {};\r\n    private on_submit = new EventEmitter<any>();\r\n    private on_submit_change = new EventEmitter<any>();\r\n\r\n    all(value: any) {\r\n        this.activeModal.close(value);\r\n    }\r\n\r\n    constructor(\r\n        public activeModal: NgbActiveModal,\r\n    ) {}\r\n}\r\n\r\n@Component({\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <patient-form [value]=\"value\" [password-field]=\"password_field\" (all)=\"all($event)\"></patient-form>\r\n    </modal-body>\r\n    `,\r\n})\r\nexport class ModalPatientForm extends ModalForm {\r\n    public value: Patient|any = {};\r\n    public password_field: boolean = false;\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'modal-patient-form',\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <provider-form [value]=\"value\" [password-field]=\"password_field\" (all)=\"all($event)\"></provider-form>\r\n    </modal-body>\r\n    `,\r\n})\r\nexport class ModalProviderForm extends ModalForm {\r\n    public value: Provider|any = {};\r\n    public password_field: boolean = false;\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n@Component({\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <health-centre-form [value]=\"value\" (all)=\"all($event)\"></health-centre-form>\r\n    </modal-body>\r\n    `,\r\n})\r\nexport class ModalHealthCentreForm extends ModalForm {\r\n    public value: HealthCentre|any = {};\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n@Component({\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <appointment-form [value]=\"value\" [show-providers]=\"show_providers\" [show-patients]=\"show_patients\" (all)=\"all($event)\"></appointment-form>\r\n    </modal-body>\r\n    `\r\n})\r\nexport class ModalAppointmentForm extends ModalForm {\r\n    public value: Appointment|any = {};\r\n    public show_providers: boolean = true;\r\n    public show_patients: boolean = true;\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n@Component({\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <health-centre-rating-form [value]=\"value\" [show-patients]=\"show_patients\" [show-health-centres]=\"show_health_centres\" (all)=\"all($event)\"></health-centre-rating-form>\r\n    </modal-body>\r\n    `\r\n})\r\nexport class ModalHealthCentreRatingForm extends ModalForm {\r\n    public value: HealthCentreRating|any = {};\r\n    public show_patients: boolean = false;\r\n    public show_health_centres: boolean = false;\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n@Component({\r\n    template: `\r\n    <modal-body [title]=\"title\" (onClick)=\"activeModal.dismiss()\">\r\n        <provider-rating-form [value]=\"value\" [show-patients]=\"show_patients\" [show-providers]=\"show_providers\" (all)=\"all($event)\"></provider-rating-form>\r\n    </modal-body>\r\n    `\r\n})\r\nexport class ModalProviderRatingForm extends ModalForm {\r\n    public value: ProviderRating|any = {};\r\n    public show_patients: boolean = false;\r\n    public show_providers: boolean = false;\r\n    constructor(activeModal: NgbActiveModal) {\r\n        super(activeModal);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HealthCentre } from \"../../models/health_centre.model\";\r\nimport { ModalConfirm } from \"./modal-dialog.component\";\r\nimport { \r\n    ModalHealthCentreForm, \r\n    ModalProviderForm, \r\n    ModalPatientForm, \r\n    ModalAppointmentForm, \r\n    ModalHealthCentreRatingForm,\r\n    ModalProviderRatingForm\r\n} from \"./modal-forms.component\";\r\nimport { Provider } from \"../../models/provider.model\";\r\nimport { Patient } from \"../../models/patient.model\";\r\nimport { Appointment } from \"../../models/appointment.model\";\r\nimport { HealthCentreRating } from \"../../models/health_centre_rating.model\";\r\nimport { ProviderRating } from \"../../models/provider_rating.model\";\r\n\r\ninterface FormResponse {\r\n    onSubmit: any;\r\n    onSubmitChange: any;\r\n}\r\n\r\n@Injectable()\r\nexport class ModalFormService {\r\n    constructor(\r\n        private modal: NgbModal,\r\n    ) {}\r\n\r\n    private open_with_animation(component): NgbModalRef {\r\n        return this.modal.open(component, { \r\n            backdropClass: 'modal-backdrop-animation',\r\n            windowClass:'modal-window-animation',\r\n        });\r\n    }\r\n\r\n    private handle_dismissal(modalRef: NgbModalRef): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            modalRef.result\r\n                .then((data) => resolve(data))\r\n                .catch((error) => {});\r\n        });\r\n    }\r\n\r\n    private open_modal_form(component, value, title): NgbModalRef {\r\n        const modalRef = this.open_with_animation(component);\r\n        modalRef.componentInstance.value = value;\r\n        modalRef.componentInstance.title = title;\r\n        return modalRef;\r\n    }\r\n\r\n    open_health_centre_form(title: string, health_centre: HealthCentre|any = {}): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalHealthCentreForm, health_centre, title);\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    open_provider_form(title: string, provider: Provider|any = {}, password_field: boolean = false): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalProviderForm, provider, title);\r\n        modalRef.componentInstance.password_field = password_field;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    open_patient_form(title: string, patient: Patient|any = {}, password_field: boolean = false): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalPatientForm, patient, title);\r\n        modalRef.componentInstance.password_field = password_field;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    open_appointment_form(title: string, appointment: Appointment|any={}, show_providers: boolean=true, show_patients: boolean=true): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalAppointmentForm, appointment, title);\r\n        modalRef.componentInstance.show_patients = show_patients;\r\n        modalRef.componentInstance.show_providers = show_providers;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    open_health_centre_rating_form(title: string, health_centre_rating: HealthCentreRating|any={}, show_patients: boolean=false, show_health_centres: boolean=false): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalHealthCentreRatingForm, health_centre_rating, title);\r\n        modalRef.componentInstance.show_patients = show_patients;\r\n        modalRef.componentInstance.show_health_centres = show_health_centres;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    open_provider_rating_form(title: string, provider_rating: ProviderRating|any={}, show_patients: boolean=false, show_providers: boolean=false): Promise<FormResponse> {\r\n        let modalRef = this.open_modal_form(ModalProviderRatingForm, provider_rating, title);\r\n        modalRef.componentInstance.show_patients = show_patients;\r\n        modalRef.componentInstance.show_providers = show_providers;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n\r\n    dialog(title: string, text: string): Promise<any> {\r\n        const modalRef = this.open_with_animation(ModalConfirm);\r\n        modalRef.componentInstance.title = title;\r\n        modalRef.componentInstance.text = text;\r\n        return this.handle_dismissal(modalRef);\r\n    }\r\n}","module.exports = \"<app-browser-toolbar *ngIf=\\\"current_user?.is_admin\\\">\\r\\n    <li class=\\\"nav-item active flex\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">library_add</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"add_health_centre()\\\">Add health centre</a>\\r\\n    </li>\\r\\n</app-browser-toolbar>\\r\\n<div class=\\\"card\\\" *ngIf=\\\"health_centres\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Health Centres</h2>\\r\\n        <health-centre-list [health-centres]=\\\"health_centres\\\"></health-centre-list>\\r\\n    </div>\\r\\n</div>\\r\\n    \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from '../../../api/api.service';\r\nimport { Observable } from \"../../../../../node_modules/rxjs\";\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'health-centre-browser',\r\n    templateUrl: './health-centre-browser.component.html',\r\n})\r\nexport class HealthCentreBrowser extends AppBrowserPanel implements OnInit {\r\n    private _health_centres: HealthCentre[];\r\n    private health_centres$: Observable<HealthCentre[]>;\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.health_centres$ = this.api.getHealthCentres();\r\n        this.health_centres$.subscribe((health_centres: HealthCentre[]) => {\r\n            this._health_centres = health_centres;\r\n        });\r\n    }\r\n\r\n    get health_centres(): HealthCentre[] {\r\n        return this._health_centres;\r\n    }\r\n\r\n    add_health_centre(): void {\r\n        this.modal.open_health_centre_form('Add health centre')\r\n            .then((form) => {\r\n                this.api.addHealthCentre(form.onSubmit)\r\n                    .subscribe((health_centre: HealthCentre) => {\r\n                        this._health_centres.push(health_centre);\r\n                    });\r\n            });\r\n    }\r\n}; ","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n    <div class='form-label-group'>\\r\\n        <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" id=\\\"inputName\\\" required autofocus>\\r\\n        <label for=\\\"inputName\\\">Name</label>\\r\\n    </div>\\r\\n    <div class='form-label-group'>\\r\\n        <input formControlName=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address\\\" id=\\\"inputAddress\\\" required>\\r\\n        <label for=\\\"inputAddress\\\">Address</label>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Submit</button>\\r\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\n\r\n@Component({\r\n    selector: 'health-centre-form',\r\n    templateUrl: './health-centre-form.component.html'\r\n})\r\nexport class HealthCentreForm extends FormComponent implements OnInit {\r\n    public value: HealthCentre;\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            'name': new FormControl(this.value.name, Validators.required),\r\n            'address': new FormControl(this.value.address, Validators.required),\r\n        });\r\n    }\r\n}","module.exports = \"<table datatable class=\\\"table row-border\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t<th>Address</th>\\r\\n\\t\\t\\t<th>Rating</th>\\r\\n\\t\\t\\t<th *ngIf=\\\"current_user?.is_admin\\\">Actions</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor=\\\"let health_centre of health_centres; let i = index;\\\">\\r\\n\\t\\t\\t<td><a routerLink=\\\"/health_centres/{{health_centre.id}}\\\">{{health_centre.name}}</a></td>\\r\\n\\t\\t\\t<td>{{health_centre.address}}</td>\\r\\n\\t\\t\\t<td>{{health_centre.rating}}</td>\\r\\n\\t\\t\\t<td *ngIf=\\\"current_user?.is_admin\\\">\\r\\n\\t\\t\\t\\t<a (click)=\\\"modify(health_centre, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n\\t\\t\\t\\t<a (click)=\\\"delete(health_centre, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit, Input, AfterViewInit, ViewChild, OnDestroy } from \"@angular/core\";\r\nimport { ApiService } from '../../../api/api.service';\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { DataTableDirective } from \"angular-datatables\";\r\n\r\n@Component({\r\n    selector: 'health-centre-list',\r\n    templateUrl: './health-centre-list.component.html',\r\n})\r\nexport class HealthCentreList extends AppBrowserPanel implements OnInit {\r\n    @Input('health-centres') health_centres: HealthCentre[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    modify(health_centre: HealthCentre, index: number) {\r\n        this.modal\r\n            .open_health_centre_form('Modify health centre', health_centre)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchHealthCentre(health_centre.id, form.onSubmitChange)\r\n                        .subscribe((patched_health_centre) => {\r\n                            this.health_centres[index] = patched_health_centre;\r\n                        });\r\n                }\r\n            });\r\n\r\n            \r\n    }\r\n\r\n    delete(health_centre: HealthCentre, index: number) {\r\n        this.modal\r\n            .dialog(\"Delete health centre\", \"Are you sure you want to delete this health centre?\")\r\n            .then(() => {\r\n                this.api.deleteHealthCentre(health_centre.id)\r\n                    .subscribe(() => {\r\n                        this.health_centres.splice(index, 1);\r\n                    });\r\n            });\r\n    }\r\n}; ","module.exports = \"<div *ngIf=\\\"health_centre\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h2 class=\\\"card-title\\\">Health centre profile</h2>\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Address</th>\\r\\n                        <th>Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>{{health_centre.name}}</td>\\r\\n                        <td>{{health_centre.address}}</td>\\r\\n                        <td>{{health_centre.rating}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"current_user?.type == 'admin'\\\" class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h2 class=\\\"card-title\\\">Modify details</h2>\\r\\n            <health-centre-form [value]=\\\"health_centre\\\" (onSubmitChange)=\\\"patch_health_centre($event)\\\"></health-centre-form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h2 class=\\\"card-title\\\">Providers</h2>\\r\\n            <provider-list [providers]=\\\"health_centre.providers\\\"></provider-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\n\r\n@Component({\r\n    selector: 'health-centre-profile',\r\n    templateUrl: './health-centre-profile.component.html',\r\n})\r\nexport class HealthCentreProfile extends AppBrowserPanel implements OnInit  {\r\n    private _health_centre: HealthCentre;\r\n    private health_centre$: Observable<HealthCentre>;\r\n    private id: string;\r\n\r\n    constructor(\r\n        private api: ApiService, \r\n        private route: ActivatedRoute,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let id = this.route.snapshot.paramMap.get('id');\r\n        this.id = id;\r\n        this.health_centre$ = this.api.getHealthCentre(id);\r\n        this.health_centre$.subscribe((health_centre: HealthCentre) => {\r\n            this._health_centre = health_centre;\r\n        })\r\n    }\r\n\r\n    get health_centre(): HealthCentre {\r\n        return this._health_centre;\r\n    }\r\n\r\n    patch_health_centre(health_centre: HealthCentre): void {\r\n        this.api.patchHealthCentre(this.id, health_centre)\r\n            .subscribe((health_centre: HealthCentre) => {\r\n                this._health_centre = health_centre;\r\n            })\r\n    }\r\n\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\r\\n        <div class=\\\"card card-signin\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title text-center\\\">Sign In</h5>\\r\\n            <form (ngSubmit)=\\\"login()\\\" class=\\\"form-signin\\\" #login_form=\\\"ngForm\\\">\\r\\n                <div class=\\\"form-label-group\\\">\\r\\n                    <input [(ngModel)]=\\\"credentials.email\\\" type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" id=\\\"inputEmail\\\" required autofocus>\\r\\n                    <label for=\\\"inputEmail\\\">Email address</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-label-group\\\">\\r\\n                    <input [(ngModel)]=\\\"credentials.password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"inputPassword\\\" required>\\r\\n                    <label for=\\\"inputPassword\\\">Password</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n                    <input [(ngModel)]=\\\"remember_me\\\" [checked]=\\\"remember_me\\\" name=\\\"remember_me\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Remember password</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n                    <input [(ngModel)]=\\\"auto_login\\\" [checked]=\\\"auto_login\\\" name=\\\"auto_login\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Auto login</label>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"!login_form.valid\\\">Sign in</button>\\r\\n                <hr class=\\\"my-4\\\">\\r\\n                <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"button\\\" routerLink=\\\"/register\\\">Register</button>\\r\\n            </form>\\r\\n        </div>\\r\\n        </div>\\r\\n        <ngb-alerts></ngb-alerts>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Login } from \"../../../models/login.model\";\r\nimport { CookieService } from \"angular2-cookie\";\r\nimport { User } from \"../../../models/user.model\";\r\n\r\n@Component({\r\n    selector: 'login-form',\r\n    templateUrl: './login-form.component.html',\r\n    styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginForm implements OnInit {\r\n    public credentials: Login = {\r\n        email: undefined,\r\n        password: undefined,\r\n    };\r\n\r\n    private _remember_me: boolean;\r\n    private _auto_login: boolean;\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private router: Router,\r\n        private cookies: CookieService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.remember_me = JSON.parse(this.cookies.get('remember_me'));\r\n        this.auto_login = JSON.parse(this.cookies.get('auto_login'));\r\n        if (this.remember_me) {\r\n            this.credentials.email = this.cookies.get('email');\r\n            this.credentials.password = this.cookies.get('password');\r\n        }\r\n    }\r\n\r\n    set remember_me(remember_me: boolean) {\r\n        this._remember_me = remember_me;\r\n        this.cookies.put('remember_me', String(remember_me));\r\n        if (!remember_me) {\r\n            this.auto_login = false;\r\n        }\r\n    }\r\n\r\n    get remember_me(): boolean {\r\n        return this._remember_me;\r\n    }\r\n\r\n    set auto_login(auto_login: boolean) {\r\n        this._auto_login = auto_login;\r\n        this.cookies.put('auto_login', String(auto_login));\r\n        if (auto_login) {\r\n            this.remember_me = true;\r\n        }\r\n    }\r\n\r\n    get auto_login(): boolean {\r\n        return this._auto_login;\r\n    }\r\n\r\n    private store_credentials(): void {\r\n        if (this.remember_me) {\r\n            this.cookies.put('email', this.credentials.email);\r\n            this.cookies.put('password', this.credentials.password);\r\n        } else {\r\n            this.cookies.remove('email');\r\n            this.cookies.remove('password');\r\n        }\r\n        this.cookies.put('remember_me', String(this.remember_me));\r\n        this.cookies.put('auto_login', String(this.auto_login));\r\n    }\r\n\r\n    login(): void {\r\n        this.auth.login({\r\n            email: this.credentials.email,\r\n            password: this.credentials.password,\r\n        }).then((user: User) => {\r\n            this.store_credentials();\r\n            switch (user.type) {\r\n            case 'admin':\r\n                this.router.navigateByUrl('/patients');\r\n                break;\r\n            case 'patient':\r\n            case 'provider':\r\n            default:\r\n                this.router.navigateByUrl('/appointments');\r\n                break;\r\n            }\r\n        }, (err) => {\r\n\r\n        });\r\n    }\r\n};","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\r\\n        <div class=\\\"card card-signin\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title text-center\\\">Register as patient</h5>\\r\\n            <patient-form (onSubmit)=\\\"register($event)\\\" [button-text]=\\\"'Submit'\\\" [password-field]=\\\"true\\\"></patient-form>\\r\\n            <hr class=\\\"my-4\\\">\\r\\n            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"button\\\" routerLink=\\\"/register_provider\\\">Register as provider</button>\\r\\n            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"button\\\" routerLink=\\\"/login\\\">Login</button>\\r\\n        </div>\\r\\n        </div>\\r\\n        <ngb-alerts></ngb-alerts>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { CookieService } from \"angular2-cookie\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'register-form-patient',\r\n    templateUrl: './register-form-patient.component.html',\r\n    styleUrls: ['./register-form-patient.component.css'],\r\n})\r\nexport class RegisterFormPatient implements OnInit {\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private cookies: CookieService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    register(patient: Patient): void {\r\n        this.api.addPatient(patient)\r\n            .subscribe((patient: Patient) => {\r\n                this.cookies.put('email', patient.email);\r\n                this.cookies.remove('password');\r\n                this.router.navigateByUrl('/login');\r\n            });\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\r\\n        <div class=\\\"card card-signin\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title text-center\\\">Register as provider</h5>\\r\\n            <provider-form (onSubmit)=\\\"register(event$)\\\" [button-text]=\\\"'Submit'\\\" [password-field]=\\\"true\\\"></provider-form>\\r\\n            <hr class=\\\"my-4\\\">\\r\\n            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"button\\\" routerLink=\\\"/register_patient\\\">Register as patient</button>\\r\\n            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"button\\\" routerLink=\\\"/login\\\">Login</button>\\r\\n        </div>\\r\\n        </div>\\r\\n        <ngb-alerts></ngb-alerts>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n        \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { CookieService } from \"angular2-cookie\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\n\r\n@Component({\r\n    selector: 'register-form-provider',\r\n    templateUrl: './register-form-provider.component.html',\r\n    styleUrls: ['./register-form-provider.component.css'],\r\n})\r\nexport class RegisterFormProvider implements OnInit {\r\n    constructor(\r\n        private api: ApiService,\r\n        private cookies: CookieService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    register(provider: Provider): void {\r\n        this.api.addProvider(provider)\r\n            .subscribe((provider: Provider) => {\r\n                this.cookies.put('email', provider.email);\r\n                this.cookies.remove('password');\r\n                this.router.navigateByUrl('/login');\r\n            });\r\n    }\r\n\r\n\r\n}","module.exports = \"<div *ngIf=\\\"patients\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h2 class=\\\"card-title\\\">Patients</h2>\\r\\n            <patient-list [patients]=\\\"patients\\\"></patient-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ApiService } from '../../../api/api.service';\r\nimport { Observable } from \"../../../../../node_modules/rxjs\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\n\r\n@Component({\r\n    selector: 'patient-browser',\r\n    templateUrl: './patient-browser.component.html',\r\n})\r\nexport class PatientBrowser implements OnInit {\r\n    private patients$: Observable<Patient[]>;\r\n    @Input('patients') patients: Patient[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.patients) {\r\n            this.patients$ = this.api.getPatients();\r\n            this.patients$.subscribe((patients) => this.patients = patients);\r\n        }\r\n    }\r\n}; ","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" id=\\\"inputName\\\" required autofocus>\\r\\n        <label for=\\\"inputName\\\">Name</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" id=\\\"inputEmail\\\" required>\\r\\n        <label for=\\\"inputEmail\\\">Email address</label>\\r\\n        <small *ngIf=\\\"form.get('email').errors?.email && form.get('email').touched\\\">Invalid email</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\" *ngIf=\\\"password_field\\\">\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"inputPassword\\\" required>\\r\\n        <label for=\\\"inputPassword\\\">Password</label>\\r\\n        <small *ngIf=\\\"form.get('password').errors?.minlength && form.get('password').touched\\\">Password must be a minimum of 8 characters</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\" *ngIf=\\\"password_field\\\">\\r\\n        <input formControlName=\\\"confirm_password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" id=\\\"inputConfirmPassword\\\" required>\\r\\n        <label for=\\\"inputConfirmPassword\\\">Confirm password</label>\\r\\n        <small *ngIf=\\\"form.errors?.confirm_password && form.get('confirm_password').touched\\\">Password doesn't match</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"phone\\\" type=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"Phone\\\" id=\\\"inputPhone\\\" required>\\r\\n        <label for=\\\"inputPhone\\\">Phone</label>\\r\\n        <small *ngIf=\\\"(phone.errors?.minlength || phone.error?.maxlength) && phone.touched\\\">Phone must be 8 digits</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"medicare\\\" type=\\\"type\\\" class=\\\"form-control\\\" placeholder=\\\"Medicare\\\" id=\\\"inputMedicare\\\" required>\\r\\n        <label for=\\\"inputMedicare\\\">Medicare</label>\\r\\n        <small *ngIf=\\\"(medicare.errors?.minlength || medicare.error?.maxlength) && form.get('medicare').touched\\\">Medicare must have 10 characters</small>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">{{button_text}}</button>\\r\\n</form>\\r\\n    \"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'patient-form',\r\n    templateUrl: './patient-form.component.html'\r\n})\r\nexport class PatientForm extends FormComponent implements OnInit {\r\n    @Input('button-text') button_text: string = 'Submit';\r\n    @Input('password-field') password_field: boolean = false;\r\n    public value: Patient|any = {};\r\n\r\n    ngOnInit(): void {\r\n        this.create_form();\r\n    }\r\n\r\n    get phone(): AbstractControl {\r\n        return this.form.get('phone');\r\n    }\r\n\r\n    get medicare(): AbstractControl {\r\n        return this.form.get('medicare');\r\n    }\r\n\r\n    private create_form() {\r\n        this.form = new FormGroup({\r\n            'name': new FormControl(this.value.name, Validators.required),\r\n            'email': new FormControl(this.value.email, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'phone': new FormControl(this.value.phone, [\r\n                Validators.required,\r\n                Validators.minLength(8),\r\n                Validators.maxLength(8),\r\n            ]),\r\n            'medicare': new FormControl(this.value.medicare, [\r\n                Validators.required,\r\n                Validators.minLength(10),\r\n                Validators.maxLength(10),\r\n            ]),\r\n        });\r\n        if (this.password_field) {\r\n            this.form.addControl('password', new FormControl(this.value.password, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n            ]));\r\n            this.form.addControl('confirm_password', new FormControl(this.value.password, Validators.required));\r\n            this.form.setValidators([this.check_password]);\r\n        }\r\n    }\r\n\r\n    check_password(group: FormGroup) {\r\n        let pass = group.get('password').value;\r\n        let confirm_pass = group.get('confirm_password').value;\r\n        if (pass != confirm_pass && pass && confirm_pass) {\r\n            return { confirm_password: true };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","module.exports = \"<table datatable class=\\\"table row-border\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t<th>Email</th>\\r\\n\\t\\t\\t<th>Phone</th>\\r\\n\\t\\t\\t<th>Medicare</th>\\r\\n\\t\\t\\t<th *ngIf=\\\"current_user?.is_admin\\\">Actions</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor=\\\"let patient of patients; let i = index;\\\">\\r\\n\\t\\t\\t<td><a routerLink=\\\"/patients/{{patient.id}}\\\">{{patient.name}}</a></td>\\r\\n\\t\\t\\t<td>{{patient.email}}</td>\\r\\n\\t\\t\\t<td>{{patient.phone}}</td>\\r\\n\\t\\t\\t<td>{{patient.medicare}}</td>\\r\\n\\t\\t\\t<td *ngIf=\\\"current_user?.is_admin\\\">\\r\\n                <a (click)=\\\"modify(patient, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n                <a (click)=\\\"delete(patient, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n            </td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ApiService } from '../../../api/api.service';\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'patient-list',\r\n    templateUrl: './patient-list.component.html',\r\n})\r\nexport class PatientList extends AppBrowserPanel implements OnInit {\r\n    @Input('patients') patients: Patient[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    modify(patient: Patient, index: number) {\r\n        this.modal\r\n            .open_patient_form('Modify patient', patient)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchPatient(patient.id, form.onSubmitChange)\r\n                        .subscribe((patched_patient) => {\r\n                            this.patients[index] = patched_patient;\r\n                        })\r\n                }\r\n            });\r\n    } \r\n\r\n    delete(patient: Patient, index: number) {\r\n        this.modal\r\n            .dialog(\"Delete patient\", \"Are you sure you want to delete this patient?\")\r\n            .then(() => {\r\n                this.api.deletePatient(patient.id)\r\n                    .subscribe(() => {\r\n                        this.patients.splice(index, 1);\r\n                    });\r\n            })\r\n    }\r\n\r\n\r\n}; ","module.exports = \"<ng-container *ngIf=\\\"patient\\\">\\r\\n<app-browser-toolbar *ngIf=\\\"show_toolbar\\\">\\r\\n    <li class=\\\"nav-item active flex\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">edit</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"modify_patient()\\\">Modify profile</a>\\r\\n    </li>\\r\\n</app-browser-toolbar>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Patient Profile</h2>\\r\\n        <table class=\\\"table table-hover row-border\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Name</th>\\r\\n                    <th>Email</th>\\r\\n                    <th>Phone</th>\\r\\n                    <th>Medicare</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td>{{patient.name}}</td>\\r\\n                    <td>{{patient.email}}</td>\\r\\n                    <td>{{patient.phone}}</td>\\r\\n                    <td>{{patient.medicare}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Appointments</h2>\\r\\n        <appointment-list *ngIf=\\\"patient.appointments\\\" [show-patients]=\\\"false\\\" [appointments]=\\\"patient.appointments\\\"></appointment-list>\\r\\n    </div>\\r\\n</div>\\r\\n</ng-container>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'patient-profile',\r\n    templateUrl: './patient-profile.component.html',\r\n})\r\nexport class PatientProfile extends AppBrowserPanel implements OnInit {\r\n    private _patient: Patient;\r\n    private patient$: Observable<Patient>;\r\n    private id: string|number;\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private route: ActivatedRoute,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const id = this.route.snapshot.paramMap.get('id');\r\n        this.id = id;\r\n        this.patient$ = this.api.getPatient(id);\r\n        this.patient$.subscribe((patient: Patient) => {\r\n            this._patient = patient;\r\n        })\r\n    }\r\n\r\n    get patient(): Patient {\r\n        return this._patient;\r\n    }\r\n\r\n    get show_toolbar(): boolean {\r\n        return (this.current_user\r\n            && (this.current_user.is_patient && this.current_user.id == this.id) \r\n        );\r\n    }\r\n\r\n    modify_patient(): void {\r\n        this.modal\r\n            .open_patient_form(\"Modify profile\", this.patient, true)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchPatient(this.id, form.onSubmitChange)\r\n                        .subscribe((patient) => {\r\n                            this._patient = patient;\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n}","module.exports = \"<div *ngIf=\\\"providers\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Providers</h2>\\r\\n        <provider-list [providers]=\\\"providers\\\"></provider-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n        \"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ApiService } from '../../../api/api.service';\r\nimport { Observable } from \"../../../../../node_modules/rxjs\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\n\r\n@Component({\r\n    selector: 'provider-browser',\r\n    templateUrl: './provider-browser.component.html',\r\n})\r\nexport class ProviderBrowser implements OnInit {\r\n    private providers$: Observable<Provider[]>;\r\n    @Input('providers') providers: Provider[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.providers) {\r\n            this.providers$ = this.api.getProviders();\r\n            this.providers$.subscribe((providers) => this.providers = providers);\r\n        }\r\n        \r\n    }\r\n}; ","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" id=\\\"inputName\\\" required autofocus>\\r\\n        <label for=\\\"inputName\\\">Name</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" id=\\\"inputEmail\\\" required>\\r\\n        <label for=\\\"inputEmail\\\">Email address</label>\\r\\n        <small *ngIf=\\\"form.get('email').errors?.email && form.get('email').touched\\\">Invalid email</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\" *ngIf=\\\"password_field\\\">\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"inputPassword\\\" required>\\r\\n        <label for=\\\"inputPassword\\\">Password</label>\\r\\n        <small *ngIf=\\\"form.get('password').errors?.minlength && form.get('password').touched\\\">Password must be a minimum of 8 characters</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\" *ngIf=\\\"password_field\\\">\\r\\n        <input formControlName=\\\"confirm_password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" id=\\\"inputConfirmPassword\\\" required>\\r\\n        <label for=\\\"inputConfirmPassword\\\">Confirm password</label>\\r\\n        <small *ngIf=\\\"form.errors?.confirm_password && form.get('confirm_password').touched\\\">Password doesn't match</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"phone\\\" type=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"Phone\\\" id=\\\"inputPhone\\\" required>\\r\\n        <label for=\\\"inputPhone\\\">Phone</label>\\r\\n        <small *ngIf=\\\"(form.get('phone').errors?.minlength || form.get('phone').errors?.maxlength )&& form.get('phone').touched\\\">Phone must be 8 digits</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"provider_number\\\" type=\\\"type\\\" class=\\\"form-control\\\" placeholder=\\\"Provider number\\\" id=\\\"inputProviderNumber\\\" required>\\r\\n        <label for=\\\"inputProviderNumber\\\">Provider number</label>\\r\\n        <small *ngIf=\\\"form.get('provider_number').errors?.minlength && form.get('provider_number').touched\\\">Provider number must have at least 10 characters</small>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Provider type</label>\\r\\n        <select formControlName=\\\"provider_type\\\" class=\\\"form-control\\\" required>\\r\\n            <option *ngFor=\\\"let provider_type of provider_types\\\" [value]=\\\"provider_type\\\">{{provider_type}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"health_centres$ | async as health_centres\\\">\\r\\n        <label>Health Centre</label>\\r\\n        <select formControlName=\\\"health_centre_id\\\" class=\\\"form-control\\\" placeholder=\\\"Health centre\\\" value=\\\"value?.health_centre_name?\\\" required>\\r\\n            <option *ngFor=\\\"let health_centre of health_centres\\\" [value]=\\\"health_centre.id\\\">{{health_centre.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">{{button_text}}</button>\\r\\n</form>\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\nimport { Provider, ProviderTypes } from \"../../../models/provider.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Validators, FormGroup, FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'provider-form',\r\n    templateUrl: './provider-form.component.html',\r\n})\r\nexport class ProviderForm extends FormComponent implements OnInit {\r\n    @Input('button-text') button_text: string = 'Submit';\r\n    @Input('password-field') password_field: boolean = false;\r\n    public value: Provider|any = {};\r\n    private _health_centres$: Observable<HealthCentre[]>;\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get health_centres$(): Observable<HealthCentre[]> {\r\n        return this._health_centres$;\r\n    }\r\n\r\n    get provider_types(): string[] {\r\n        return ProviderTypes;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.create_form();\r\n        this._health_centres$ = this.api.getHealthCentres();\r\n        this.health_centres$.subscribe((health_centres: HealthCentre[]) => {\r\n            let health_centre_id = this.form.get('health_centre_id');\r\n            if (!health_centre_id.value)\r\n                health_centre_id.setValue(health_centres[0].id);\r\n        });\r\n    }\r\n\r\n    private create_form() {\r\n        this.form = new FormGroup({\r\n            'name': new FormControl(this.value.name, Validators.required),\r\n            'email': new FormControl(this.value.email, [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'phone': new FormControl(this.value.phone, [\r\n                Validators.required,\r\n                Validators.minLength(8),\r\n                Validators.maxLength(8),\r\n            ]),\r\n            'provider_number': new FormControl(this.value.provider_number, [\r\n                Validators.required,\r\n                Validators.minLength(10),\r\n            ]),\r\n            'provider_type': new FormControl(this.value.provider_type || this.provider_types[0], [\r\n                Validators.required,\r\n            ]),\r\n            'health_centre_id': new FormControl(this.value.health_centre_id, [\r\n                Validators.required,\r\n            ]),\r\n        });\r\n        if (this.password_field) {\r\n            this.form.addControl('password', new FormControl(this.value.password, [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n            ]));\r\n            this.form.addControl('confirm_password', new FormControl(this.value.password, Validators.required));\r\n            this.form.setValidators([this.check_password]);\r\n        }\r\n    }\r\n\r\n    check_password(group: FormGroup) {\r\n        let pass = group.get('password').value;\r\n        let confirm_pass = group.get('confirm_password').value;\r\n        if (pass != confirm_pass && pass && confirm_pass) {\r\n            return { confirm_password: true };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","module.exports = \"<table datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table row-border\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Email</th>\\r\\n            <th>Phone</th>\\r\\n            <th>Health centre</th>\\r\\n            <th>Provider number</th>\\r\\n            <th>Provider type</th>\\r\\n            <th>Rating</th>\\r\\n            <th *ngIf=\\\"current_user?.is_admin\\\">Actions</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let provider of providers; let i = index;\\\">\\r\\n            <td><a routerLink=\\\"/providers/{{provider.id}}\\\">{{provider.name}}</a></td>\\r\\n            <td>{{provider.email}}</td>\\r\\n            <td>{{provider.phone}}</td>\\r\\n            <td><a routerLink=\\\"/health_centres/{{provider.health_centre_id}}\\\">{{provider.health_centre_name}}</a></td>\\r\\n            <td>{{provider.provider_number}}</td>\\r\\n            <td>{{provider.provider_type}}</td>\\r\\n            <td>{{provider.rating}}</td>\\r\\n            <td *ngIf=\\\"current_user?.is_admin\\\">\\r\\n                <a (click)=\\\"modify(provider, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n                <a (click)=\\\"delete(provider, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n    \"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\n\r\n@Component({\r\n    selector: 'provider-list',\r\n    templateUrl: './provider-list.component.html',\r\n})\r\nexport class ProviderList extends AppBrowserPanel implements OnInit {\r\n    @Input('providers') providers: Provider[];\r\n\r\n    public dtOptions: DataTables.Settings = {};\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) {\r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dtOptions = {\r\n            autoWidth: false,\r\n            responsive: true,\r\n        };\r\n    }\r\n\r\n    modify(provider: Provider, index: number) {\r\n        this.modal\r\n            .open_provider_form('Modify provider', provider)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchProvider(provider.id, form.onSubmitChange)\r\n                        .subscribe((patched_provider) => {\r\n                            this.providers[index] = patched_provider;\r\n                        })\r\n                }\r\n            });\r\n    } \r\n\r\n    delete(provider: Provider, index: number) {\r\n        this.modal\r\n            .dialog(\"Delete provider\", \"Are you sure you want to delete this provider?\")\r\n            .then(() => {\r\n                this.api.deleteProvider(provider.id)\r\n                    .subscribe(() => {\r\n                        this.providers.splice(index, 1);\r\n                    });\r\n            })\r\n    }\r\n}; ","module.exports = \"<ng-container *ngIf=\\\"provider\\\">\\r\\n<app-browser-toolbar *ngIf=\\\"show_toolbar\\\">\\r\\n    <li class=\\\"nav-item active flex\\\" *ngIf=\\\"current_user?.is_patient\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">library_add</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"add_appointment()\\\">Make appointment</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item active flex\\\" *ngIf=\\\"current_user?.is_provider && current_user?.id == id\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">edit</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"modify_profile()\\\">Modify profile</a>\\r\\n    </li>\\r\\n</app-browser-toolbar>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Provider profile</h2>\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Name</th>\\r\\n                    <th>Email</th>\\r\\n                    <th>Phone</th>\\r\\n                    <th>Provider number</th>\\r\\n                    <th>Provider type</th>\\r\\n                    <th>Rating</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td>{{provider.name}}</td>\\r\\n                    <td>{{provider.email}}</td>\\r\\n                    <td>{{provider.phone}}</td>\\r\\n                    <td>{{provider.provider_number}}</td>\\r\\n                    <td>{{provider.provider_type}}</td>\\r\\n                    <td>{{provider.rating}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"card\\\" >\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Appointments</h2>\\r\\n        <appointment-list *ngIf=\\\"provider.appointments\\\" [show-providers]=\\\"false\\\" [show-patients]=\\\"show_patients\\\" [appointments]=\\\"provider.appointments\\\"></appointment-list>\\r\\n    </div>\\r\\n</div>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n    \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\nimport { Appointment } from \"../../../models/appointment.model\";\r\nimport { AlertService } from \"../../../alerts/alerts.service\";\r\n\r\n@Component({\r\n    selector: 'provider-profile',\r\n    templateUrl: './provider-profile.component.html',\r\n})\r\nexport class ProviderProfile extends AppBrowserPanel implements OnInit {\r\n    private provider$: Observable<Provider>;\r\n    private _provider: Provider;\r\n    private id: number|string;\r\n    private appointment_cache: Appointment|any = {};\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private route: ActivatedRoute,\r\n        private modal: ModalFormService,\r\n        private alert: AlertService,\r\n        auth: AuthService,\r\n    ) { \r\n        super(auth);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const id = this.route.snapshot.paramMap.get('id');\r\n        this.id = id;\r\n        this.provider$ = this.api.getProvider(id);\r\n        this.provider$.subscribe((provider) => {\r\n            this._provider = provider;\r\n        })\r\n    }\r\n\r\n    get provider(): Provider {\r\n        return this._provider;\r\n    }\r\n\r\n    get show_toolbar(): boolean {\r\n        if (this.current_user) {\r\n            if (this.current_user.is_patient) return true;  // make appointmnet\r\n            if (this.current_user.is_provider && this.id == this.current_user.id) return true; // modify own profile\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get show_patients(): boolean {\r\n        if (this.current_user && this.current_user.is_patient) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    modify_profile(): void {\r\n        this.modal\r\n            .open_provider_form(\"Modify profile\", this.provider, true)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchProvider(this.id, form.onSubmitChange)\r\n                        .subscribe((provider) => {\r\n                            this._provider = provider;\r\n                        });\r\n                }\r\n            })\r\n    }\r\n\r\n    add_appointment(): void {\r\n        this.modal\r\n            .open_appointment_form(\"Make appointment\", {...(this.appointment_cache),\r\n                    patient_id: this.current_user.id,\r\n                    provider_id: this.provider.id,\r\n                }, false, false)\r\n            .then((form) => {\r\n                this.appointment_cache = form.onSubmit;\r\n                this.api.addAppointment(form.onSubmit)\r\n                    .subscribe((appointment) => {\r\n                        this.provider.appointments.push(appointment);\r\n                    });\r\n            })\r\n    }\r\n\r\n    modify_appointment(appointment: Appointment, index: number): void {\r\n        this.modal\r\n            .open_appointment_form(\"Modify appointment\", appointment, false, false)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api.patchAppointment(appointment.id, form.onSubmitChange)\r\n                        .subscribe((patched_appointment) => {\r\n                            this.provider.appointments[index] = patched_appointment;\r\n                        });     \r\n                }\r\n            });\r\n    }\r\n\r\n    delete_appointment(appointment: Appointment, index: number): void {\r\n        this.modal\r\n            .dialog(\"Cancel appointment\", \"Are you sure you want to cancel this appointment?\")\r\n            .then(() => {\r\n                this.api.deleteAppointment(appointment.id)\r\n                    .subscribe((response) => {\r\n                        this.provider.appointments.splice(index, 1);\r\n                        this.alert.addAlert({\r\n                            type: 'success',\r\n                            text: String(response),\r\n                            autodismiss: 2.5,\r\n                        });\r\n                    });\r\n            })\r\n    }\r\n\r\n\r\n}","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_patients\\\">\\r\\n        <label>Patients</label>\\r\\n        <select formControlName=\\\"patient_id\\\" class=\\\"form-control\\\" placeholder=\\\"Patient\\\" value=\\\"value?.patient_name?\\\" required>\\r\\n            <option *ngFor=\\\"let patient of patients\\\" [value]=\\\"patient.id\\\">{{patient.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_health_centres\\\">\\r\\n        <label>Health centres</label>\\r\\n        <select formControlName=\\\"health_centre_id\\\" class=\\\"form-control\\\" placeholder=\\\"Health centre\\\" value=\\\"value?.health_centre_name?\\\" required>\\r\\n            <option *ngFor=\\\"let health_centre of health_centres\\\" [value]=\\\"health_centre.id\\\">{{health_centre.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"rating\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Rating\\\" id=\\\"inputRating\\\">\\r\\n        <label for=\\\"inputRating\\\">Rating</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"comment\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Comment\\\" id=\\\"inputComment\\\">\\r\\n        <label for=\\\"inputComment\\\">Comment</label>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">{{button_text}}</button>\\r\\n</form>\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\nimport { ProviderRating } from \"../../../models/provider_rating.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { HealthCentre } from \"../../../models/health_centre.model\";\r\n\r\n@Component({\r\n    selector: 'health-centre-rating-form',\r\n    templateUrl: './health-centre-rating-form.component.html',\r\n})\r\nexport class HealthCentreRatingForm extends FormComponent implements OnInit {\r\n    @Input('button-text') button_text: string = 'Submit';\r\n    @Input('show-patients') show_patients: boolean = false;\r\n    @Input('show-health-centres') show_health_centres: boolean = false;\r\n\r\n    public value: ProviderRating|any = {};\r\n    private patients$: Observable<Patient[]>;\r\n    private _patients: Patient[];\r\n    private health_centres$: Observable<HealthCentre[]>;\r\n    private _health_centres: HealthCentre[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get patients(): Patient[] {\r\n        return this._patients;\r\n    }\r\n\r\n    get health_centres(): HealthCentre[] {\r\n        return this._health_centres;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            'patient_id': new FormControl(this.value.patient_id, Validators.required),\r\n            'health_centre_id': new FormControl(this.value.health_centre_id, Validators.required),\r\n            'rating': new FormControl(this.value.rating || 5, Validators.required),\r\n            'comment': new FormControl(this.value.comment || \"\"),\r\n        });\r\n        this.patients$ = this.api.getPatients();\r\n        this.patients$.subscribe((patients) => {\r\n            this._patients = patients;\r\n            let patient_id = this.form.get('patient_id');\r\n            if (!patient_id.value) {\r\n                patient_id.setValue(patients[0].id);\r\n            }\r\n        });\r\n        this.health_centres$ = this.api.getHealthCentres();\r\n        this.health_centres$.subscribe((health_centres) => {\r\n            this._health_centres = health_centres;\r\n            let health_centre_id = this.form.get('health_centre_id');\r\n            if (!health_centre_id.value) {\r\n                health_centre_id.setValue(health_centres[0].id);\r\n            }\r\n        });\r\n    }\r\n}","module.exports = \"<table datatable class=\\\"table row-border\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Patient name</th>\\r\\n            <th>Health centre name</th>\\r\\n            <th>Rating</th>\\r\\n            <th>Comment</th>\\r\\n            <th *ngIf=\\\"current_user?.is_admin\\\">Actions</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let rating of health_centre_ratings; let i = index;\\\">\\r\\n            <td><a routerLink=\\\"/patients/{{rating.patient_id}}\\\">{{rating.patient_name}}</a></td>\\r\\n            <td><a routerLink=\\\"/health_centres/{{rating.health_centre_id}}\\\">{{rating.health_centre_name}}</a></td>\\r\\n            <td>{{rating.rating}}</td>\\r\\n            <td>{{rating.comment}}</td>\\r\\n            <td *ngIf=\\\"current_user?.is_admin\\\">\\r\\n                <a (click)=\\\"modify(rating, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n                <a (click)=\\\"delete(rating, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","import { Component, Input } from \"@angular/core\";\r\nimport { HealthCentreRating } from \"../../../models/health_centre_rating.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\n\r\n@Component({\r\n    selector: 'health-centre-rating-list',\r\n    templateUrl: './health-centre-rating-list.component.html',\r\n})\r\nexport class HealthCentreRatingList extends AppBrowserPanel {\r\n    @Input('health-centre-ratings') health_centre_ratings: HealthCentreRating[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) {\r\n        super(auth);\r\n    }\r\n\r\n    modify(health_centre_rating: HealthCentreRating, index: number): void {\r\n        this.modal\r\n            .open_health_centre_rating_form('Modify rating', health_centre_rating)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api\r\n                        .patchHealthCentreRating(health_centre_rating.id, form.onSubmitChange)\r\n                        .subscribe((patched_health_centre_rating) => {\r\n                            this.health_centre_ratings[index] = patched_health_centre_rating;\r\n                        });\r\n                }\r\n            })\r\n    }\r\n\r\n    delete(health_centre_rating: HealthCentreRating, index: number): void {\r\n        this.modal\r\n            .dialog('Delete rating', 'Are you sure you want to delete this rating?')\r\n            .then(() => {\r\n                this.api\r\n                    .deleteHealthCentreRating(health_centre_rating.id)\r\n                    .subscribe(() => {\r\n                        this.health_centre_ratings.splice(index, 1);\r\n                    });\r\n            });\r\n    }\r\n}","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_patients\\\">\\r\\n        <label>Patients</label>\\r\\n        <select formControlName=\\\"patient_id\\\" class=\\\"form-control\\\" placeholder=\\\"Patient\\\" value=\\\"value?.patient_name?\\\" required>\\r\\n            <option *ngFor=\\\"let patient of patients\\\" [value]=\\\"patient.id\\\">{{patient.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"show_providers\\\">\\r\\n        <label>Providers</label>\\r\\n        <select formControlName=\\\"provider_id\\\" class=\\\"form-control\\\" placeholder=\\\"Provider\\\" value=\\\"value?.provider_name?\\\" required>\\r\\n            <option *ngFor=\\\"let provider of providers\\\" [value]=\\\"provider.id\\\">{{provider.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"rating\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Rating\\\" id=\\\"inputRating\\\">\\r\\n        <label for=\\\"inputRating\\\">Rating</label>\\r\\n    </div>\\r\\n    <div class=\\\"form-label-group\\\">\\r\\n        <input formControlName=\\\"comment\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Comment\\\" id=\\\"inputComment\\\">\\r\\n        <label for=\\\"inputComment\\\">Comment</label>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">{{button_text}}</button>\\r\\n</form>\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormComponent } from \"../../forms/form.component\";\r\nimport { ProviderRating } from \"../../../models/provider_rating.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Patient } from \"../../../models/patient.model\";\r\nimport { Provider } from \"../../../models/provider.model\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'provider-rating-form',\r\n    templateUrl: './provider-rating-form.component.html',\r\n})\r\nexport class ProviderRatingForm extends FormComponent implements OnInit {\r\n    @Input('button-text') button_text: string = 'Submit';\r\n    @Input('show-patients') show_patients: boolean = false;\r\n    @Input('show-providers') show_providers: boolean = false;\r\n\r\n    public value: ProviderRating|any = {};\r\n    private patients$: Observable<Patient[]>;\r\n    private _patients: Patient[];\r\n    private providers$: Observable<Provider[]>;\r\n    private _providers: Provider[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get patients(): Patient[] {\r\n        return this._patients;\r\n    }\r\n\r\n    get providers(): Provider[] {\r\n        return this._providers;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            'patient_id': new FormControl(this.value.patient_id, Validators.required),\r\n            'provider_id': new FormControl(this.value.provider_id, Validators.required),\r\n            'rating': new FormControl(this.value.rating || 5, Validators.required),\r\n            'comment': new FormControl(this.value.comment || \"\"),\r\n        });\r\n        this.patients$ = this.api.getPatients();\r\n        this.patients$.subscribe((patients) => {\r\n            this._patients = patients;\r\n            let patient_id = this.form.get('patient_id');\r\n            if (!patient_id.value) {\r\n                patient_id.setValue(patients[0].id);\r\n            }\r\n        });\r\n        this.providers$ = this.api.getProviders();\r\n        this.providers$.subscribe((providers) => {\r\n            this._providers = providers;\r\n            let provider_id = this.form.get('provider_id');\r\n            if (!provider_id.value) {\r\n                provider_id.setValue(providers[0].id);\r\n            }\r\n        });\r\n    }\r\n}","module.exports = \"<table datatable class=\\\"table row-border\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Patient name</th>\\r\\n            <th>Provider name</th>\\r\\n            <th>Rating</th>\\r\\n            <th>Comment</th>\\r\\n            <th *ngIf=\\\"current_user?.is_admin\\\">Actions</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let rating of provider_ratings; let i = index;\\\">\\r\\n            <td><a routerLink=\\\"/patients/{{rating.patient_id}}\\\">{{rating.patient_name}}</a></td>\\r\\n            <td><a routerLink=\\\"/providers/{{rating.provider_id}}\\\">{{rating.provider_name}}</a></td>\\r\\n            <td>{{rating.rating}}</td>\\r\\n            <td>{{rating.comment}}</td>\\r\\n            <td *ngIf=\\\"current_user?.is_admin\\\">\\r\\n                <a (click)=\\\"modify(rating, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Edit\\\"><i class=\\\"material-icons mr-1\\\">edit</i></a>\\r\\n                <a (click)=\\\"delete(rating, i)\\\" data-toggle=\\\"tooltip\\\" title=\\\"Delete\\\"><i class=\\\"material-icons\\\">delete_outline</i></a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","import { Component, Input } from \"@angular/core\"; \r\nimport { ProviderRating } from \"../../../models/provider_rating.model\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'provider-rating-list',\r\n    templateUrl: './provider-rating-list.component.html',\r\n})\r\nexport class ProviderRatingList extends AppBrowserPanel {\r\n    @Input('provider-ratings') provider_ratings: ProviderRating[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) {\r\n        super(auth);\r\n    }\r\n\r\n    modify(provider_rating: ProviderRating, index: number): void {\r\n        this.modal\r\n            .open_provider_rating_form('Modify rating', provider_rating)\r\n            .then((form) => {\r\n                if (form.onSubmitChange) {\r\n                    this.api\r\n                        .patchProviderRating(provider_rating.id, form.onSubmitChange)\r\n                        .subscribe((patched_provider_rating) => {\r\n                            this.provider_ratings[index] = patched_provider_rating;\r\n                        });\r\n                }\r\n            })\r\n    }\r\n\r\n    delete(provider_rating: ProviderRating, index: number): void {\r\n        this.modal\r\n            .dialog('Delete rating', 'Are you sure you want to delete this rating?')\r\n            .then(() => {\r\n                this.api\r\n                    .deleteProviderRating(provider_rating.id)\r\n                    .subscribe(() => {\r\n                        this.provider_ratings.splice(index, 1);\r\n                    });\r\n            });\r\n    }\r\n}","module.exports = \"<div *ngIf=\\\"current_user?.is_admin\\\">\\r\\n<app-browser-toolbar *ngIf=\\\"current_user?.is_admin\\\">\\r\\n    <li class=\\\"nav-item active flex\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">library_add</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"add_health_centre_rating()\\\">Add health centre rating</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item active flex\\\">\\r\\n        <i class=\\\"material-icons mr-1\\\">library_add</i>\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"add_provider_rating()\\\">Add provider rating</a>\\r\\n    </li>\\r\\n</app-browser-toolbar>\\r\\n<div class=\\\"card\\\" *ngIf=\\\"health_centre_ratings?.length\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Health centre ratings</h2>\\r\\n        <health-centre-rating-list [health-centre-ratings]=\\\"health_centre_ratings\\\"></health-centre-rating-list>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"card\\\" *ngIf=\\\"provider_ratings?.length\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">Provider ratings</h2>\\r\\n        <provider-rating-list [provider-ratings]=\\\"provider_ratings\\\"></provider-rating-list>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n        \"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"../../../api/api.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HealthCentreRating } from \"../../../models/health_centre_rating.model\";\r\nimport { ProviderRating } from \"../../../models/provider_rating.model\";\r\nimport { AppBrowserPanel } from \"../../../app-browser/app-browser-panel.component\";\r\nimport { AuthService } from \"../../../api/auth.service\";\r\nimport { ModalFormService } from \"../../forms/modal-forms.service\";\r\n\r\n@Component({\r\n    selector: 'ratings-browser',\r\n    templateUrl: './ratings-browser.component.html',\r\n})\r\nexport class RatingsBrowser extends AppBrowserPanel implements OnInit {\r\n    private health_centre_ratings$: Observable<HealthCentreRating[]>;\r\n    private _health_centre_ratings: HealthCentreRating[];\r\n    private provider_ratings$: Observable<ProviderRating[]>;\r\n    private _provider_ratings: ProviderRating[];\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private modal: ModalFormService,\r\n        auth: AuthService,\r\n    ) {\r\n        super(auth);\r\n    }\r\n\r\n    get health_centre_ratings(): HealthCentreRating[] {\r\n        return this._health_centre_ratings;\r\n    }\r\n\r\n    get provider_ratings(): ProviderRating[] {\r\n        return this._provider_ratings;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.health_centre_ratings$ = this.api.getHealthCentreRatings();\r\n        this.health_centre_ratings$.subscribe((health_centre_ratings) => {\r\n            this._health_centre_ratings = health_centre_ratings;\r\n        })\r\n        this.provider_ratings$ = this.api.getProviderRatings();\r\n        this.provider_ratings$.subscribe((provider_ratings) => {\r\n            this._provider_ratings = provider_ratings;\r\n        })\r\n    }\r\n\r\n    add_health_centre_rating() {\r\n        this.modal\r\n            .open_health_centre_rating_form('Add health centre rating', {}, true, true)\r\n            .then((form) => {\r\n                this.api.addHealthCentreRating(form.onSubmit)\r\n                    .subscribe((health_centre_rating) => {\r\n                        this._health_centre_ratings.push(health_centre_rating);\r\n                    });\r\n            })\r\n        \r\n    }\r\n\r\n    add_provider_rating() {\r\n        this.modal\r\n            .open_provider_rating_form('Add provider rating', {}, true, true)\r\n            .then((form) => {\r\n                this.api.addProviderRating(form.onSubmit)\r\n                    .subscribe((provider_rating) => {\r\n                        this._provider_ratings.push(provider_rating);\r\n                    });\r\n            });\r\n    }\r\n\r\n}","import { User } from \"./user.model\";\r\nimport { RatedModel } from './rated_model.model';\r\nimport { Appointment } from \"./appointment.model\";\r\n\r\nexport interface Provider extends User, RatedModel {\r\n    health_centre_id: string|number,\r\n    health_centre_name: string,\r\n    provider_type: string,\r\n    provider_number: string,\r\n    appointments: Appointment[],\r\n}\r\n\r\nexport let ProviderTypes: string[] = [\r\n    'General Practitioner', \r\n    'Physiotherapist',\r\n    'Pathologist',\r\n    'Pharmacist',\r\n];","import {\r\n    animate,\r\n    style,\r\n    query,\r\n    group,\r\n    AnimationQueryMetadata,\r\n    AnimationGroupMetadata,\r\n} from '@angular/animations';\r\n\r\n// get meta data for sliding animations\r\n// NOTE: decorators don't work with functions\r\n// export function getSlideTransitionData(\r\n//     horizontal: boolean, displacement: number, \r\n//     hideDuration: number = 0.3, showDuration: number = 0.3\r\n// ): (AnimationQueryMetadata | AnimationGroupMetadata)[] {\r\n//     let translateDirection: string = horizontal ? 'translateX' : 'translateY';\r\n//     let transitionData = [\r\n//         group([ // for parallel animations\r\n//             query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n//             , { optional: true }),\r\n//             query(':enter', [\r\n//                 style({ transform: `${translateDirection}(${displacement}%)`, opacity: 0 }),\r\n//                 group([\r\n//                     animate(`${showDuration}s ease-in-out`, style({ transform: `${translateDirection}(0%)` })),\r\n//                     animate(`${showDuration}s`, style({ opacity: 1 })),\r\n//                 ]),\r\n//             ], { optional: true }),\r\n//             query(':leave', [\r\n//                 style({ transform: `${translateDirection}(0%)`, opacity: 1 }),\r\n//                 group([\r\n//                     animate(`${hideDuration}s ease-in-out`, style({ transform: `${translateDirection}(${-displacement}%)` })),\r\n//                     animate(`${hideDuration}s`, style({ opacity: 0 })),\r\n//                 ]),\r\n//             ], { optional: true }),\r\n//         ])\r\n//     ];\r\n//     return transitionData;\r\n// }\r\n\r\n// all transition metadata\r\nexport const fadeTransitionData: (AnimationQueryMetadata | AnimationGroupMetadata)[] = [\r\n    query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n    , { optional: true }),\r\n    query(':enter', [   // for entering objects immediately set opacity to 0 for hidden\r\n        style({ opacity: 0 }), \r\n    ], { optional: true }),\r\n    query(':leave', [\r\n        style({ opacity: 1 }), \r\n        animate('0.15s', style({ opacity: 0 }))\r\n    ], { optional: true }),\r\n    query(':enter', [\r\n        style({ opacity: 0 }), \r\n        animate('0.15s', style({ opacity: 1 }))\r\n    ], { optional: true }),\r\n];\r\n\r\nexport const slideLeftTransitionData = group([ // for parallel animations\r\n    query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n    , { optional: true }),\r\n    query(':enter', [\r\n        style({ transform: `translateX(-100%)`, opacity: 0 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateX(0%)` })),\r\n            animate(`0.3s`, style({ opacity: 1 })),\r\n        ]),\r\n    ], { optional: true }),\r\n    query(':leave', [\r\n        style({ transform: `translateX(0%)`, opacity: 1 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateX(100%)` })),\r\n            animate(`0.3s`, style({ opacity: 0 })),\r\n        ]),\r\n    ], { optional: true }),\r\n]);\r\n\r\nexport const slideRightTransitionData = group([ // for parallel animations\r\n    query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n    , { optional: true }),\r\n    query(':enter', [\r\n        style({ transform: `translateX(100%)`, opacity: 0 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateX(0%)` })),\r\n            animate(`0.3s`, style({ opacity: 1 })),\r\n        ]),\r\n    ], { optional: true }),\r\n    query(':leave', [\r\n        style({ transform: `translateX(0%)`, opacity: 1 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateX(-100%)` })),\r\n            animate(`0.3s`, style({ opacity: 0 })),\r\n        ]),\r\n    ], { optional: true }),\r\n]);\r\n\r\nexport const slideUpTransitionData = group([ // for parallel animations\r\n    query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n    , { optional: true }),\r\n    query(':enter', [\r\n        style({ transform: `translateY(-100%)`, opacity: 0 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateY(0%)` })),\r\n            animate(`0.3s`, style({ opacity: 1 })),\r\n        ]),\r\n    ], { optional: true }),\r\n    query(':leave', [\r\n        style({ transform: `translateY(0%)`, opacity: 1 }),\r\n        group([\r\n            animate(`0.15s ease-in-out`, style({ transform: `translateY(10%)` })),\r\n            animate(`0.1s`, style({ opacity: 0 })),\r\n        ]),\r\n    ], { optional: true }),\r\n]);\r\n\r\nexport const slideDownTransitionData = group([ // for parallel animations\r\n    query(':enter, :leave', style({ position: 'fixed', width:'1200px' })\r\n    , { optional: true }),\r\n    query(':enter', [\r\n        style({ transform: `translateY(100%)`, opacity: 0 }),\r\n        group([\r\n            animate(`0.3s ease-in-out`, style({ transform: `translateY(0%)` })),\r\n            animate(`0.3s`, style({ opacity: 1 })),\r\n        ]),\r\n    ], { optional: true }),\r\n    query(':leave', [\r\n        style({ transform: `translateY(0%)`, opacity: 1 }),\r\n        group([\r\n            animate(`0.15s ease-in-out`, style({ transform: `translateY(-10%)` })),\r\n            animate(`0.1s`, style({ opacity: 0 })),\r\n        ]),\r\n    ], { optional: true }),\r\n]);\r\n\r\n","import {\r\n    trigger,\r\n    transition,\r\n} from '@angular/animations';\r\n\r\nimport { \r\n    fadeTransitionData, \r\n    slideUpTransitionData, \r\n    slideLeftTransitionData, \r\n    slideRightTransitionData, \r\n    slideDownTransitionData \r\n} from './animation-metadata';\r\n\r\nexport const fadeAnimation = trigger('fadeAnimation', [\r\n    transition('* => *', fadeTransitionData)\r\n]);\r\n\r\nexport const slideAnimation = trigger('slideAnimation', [\r\n    // transition('workout => scrum', slideLeftTransitionData),\r\n    // transition('scrum => workout', slideRightTransitionData),\r\n    // transition('scrum => scrum-item', slideDownTransitionData),\r\n    // transition('workout => workout-item', slideDownTransitionData),\r\n    transition('* => login', slideLeftTransitionData),\r\n    transition('login => *', slideRightTransitionData),\r\n    transition('register_patient => register_provider', slideRightTransitionData),\r\n    transition('register_provider => register_patient', slideLeftTransitionData),\r\n    transition('* => *', fadeTransitionData)\r\n]);\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}